[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Reportes Automáticos",
    "section": "",
    "text": "1 Prefacio"
  },
  {
    "objectID": "index.html#introducción",
    "href": "index.html#introducción",
    "title": "Reportes Automáticos",
    "section": "1.1 Introducción",
    "text": "1.1 Introducción\nEn este curso aprenderá a crear y modificar cada elemento de un archivo R Markdown, incluyendo código, texto, y metadatos. Manipulará y analizará información usando los paquetes tidyr y dplyr, creará visualizaciones con ggplot2, y combinará todas estas acciones en reportes reproducibles en formato Word utilizando el entorno RStudio. Esto se realizará a través de ejemplos prácticos de escritura de código y creación de documentos buscando también generar una lógica para organizar eficientemente sus reportes. Al final de este curso será capaz de abordar sus propios proyectos de generación y automatización de reportes."
  },
  {
    "objectID": "index.html#objetivos",
    "href": "index.html#objetivos",
    "title": "Reportes Automáticos",
    "section": "1.2 Objetivos",
    "text": "1.2 Objetivos\n\nProfundizar en el uso de técnicas de programación en R para el manejo y visualización de datos en el contexto de crear reportes\nConocer los distintos componentes de un documento reproducible usando R Markdown y cómo combinar estos para la generación de documentos\nAprender a utilizar la parametrización de documentos para automatizar la generación de estos\nConocer las opciones de personalización que R y Markdown ofrecen y cómo incluir estas en sus reportes"
  },
  {
    "objectID": "index.html#contenidos",
    "href": "index.html#contenidos",
    "title": "Reportes Automáticos",
    "section": "1.3 Contenidos",
    "text": "1.3 Contenidos\n\n\n\n\n\n\nIntroducción a R y RStudio, conceptimos básicos del lenguajes programación, declaración, de variables, funciones, estructuras de control y bubles, necesarios para realizar operaciones y análsis.\n\nAnálisis, manejo de datos, y visualizaciones (6 horas): profundizar en el uso de paquetes pertenecientes al denominado tidyverse (dplyr, tidyr , y ggplot2, entre otros) con foco en la manipulación de datos para la generación de gráficos y tablas a incluir en reportes.\nIntroducción a R Markdown (3 horas): aprender sobre los tres componentes de un archivo R Markdown (código, texto, y metadatos) y cómo agregar/modificar estos a la hora de generar un reporte.\nAutomatizando reportes (3 horas): conocer el uso de parámetros en R Markdown y cómo incluirlos a la hora de generar un reporte. Utilizar funciones e iteraciones para generar distintos reportes de forma simple.\nMejorando los reportes (3 horas): explorar las opciones de personalización que R y R Markdown ofrecen con el fin de adaptar los reportes a las necesidades (visuales) de la organización. Se hará especial énfasis en el uso del paquete flextable para la creación de tablas personalizadas."
  },
  {
    "objectID": "index.html#profesor-var-profesor.name",
    "href": "index.html#profesor-var-profesor.name",
    "title": "Reportes Automáticos",
    "section": "Profesor: Denis Berroeta",
    "text": "Profesor: Denis Berroeta\nCoordinador de Investigación, Centro de Inteligencia Territorial - UAI, email: denis.berroeta@uai.cl\nMagíster en Inteligencia Artificial, Doctorado y Master en Data Science (cursando), Ingeniero en Prevención de Riesgos y Topógrafo. Tiene experiencia en modelamiento y análisis de datos espaciales, trabajando en diferentes proyectos de investigación públicos y privados en el Centro de Inteligencia Territorial de la Universidad Adolfo Ibáñez, donde se desempeña como coordinador de investigación, diseñando y gestionando la implementación de metodologías de análisis de datos territoriales. Posee experiencia como profesor en Geoestadísticas; Análisis Criminal, Análisis de imágenes satelitales para el monitoreo ambiental y gestión de desastres naturales; y Data Science. Tema de Tesis Detección de Cambios en Imágenes Radar con técnicas de deep learning.\nProfesor de cursos y postgrados de la Escuela de Gobierno y de Diseño en UAI, CIAE de Universidad de Chile."
  },
  {
    "objectID": "index.html#ayudante-var-ayudante.name",
    "href": "index.html#ayudante-var-ayudante.name",
    "title": "Reportes Automáticos",
    "section": "Ayudante: Lynn Richards",
    "text": "Ayudante: Lynn Richards\nAyudante del Curso email: lrichards@alumnos.uai.cl"
  },
  {
    "objectID": "index.html#metodología",
    "href": "index.html#metodología",
    "title": "Reportes Automáticos",
    "section": "1.4 Metodología",
    "text": "1.4 Metodología\nClases a distancia (vía Zoom) combinando componentes expositivos y prácticos. Durante el curso se realizarán distintos ejercicios en clase y demostraciones prácticas en R que requerirán que cada estudiante interactúe con un computador personal.\nSumado a las clases lectivas, el curso tendrá 6 horas de ayudantía, donde los estudiantes podrán responder dudas de manera personalizada durante su desarrollo. Estas sesiones no son obligatorias y no tendrán -a priori- contenidos a ser cubiertos sino que se ajustarán a las consultas que los asistentes tengan o -idealmente- envíen con anticipación al ayudante."
  },
  {
    "objectID": "index.html#evaluación",
    "href": "index.html#evaluación",
    "title": "Reportes Automáticos",
    "section": "1.5 Evaluación",
    "text": "1.5 Evaluación\nSe realizarán 3 evaluaciones, las 2 primeras con una ponderación de 20% cada una. Finalmente se realizará una evaluación final del curso con una ponderación de 60%. Todas las evaluaciones deberán ser entregada en línea. No hay entregas fuera de plazo."
  },
  {
    "objectID": "index.html#normas",
    "href": "index.html#normas",
    "title": "Reportes Automáticos",
    "section": "1.6 Normas",
    "text": "1.6 Normas\n\nPresencia Activa:\n\nEste curso, por su metodología experiencial, requiere de una participación activa de los participantes. Es importante descubrir las fuentes de distracción y evitarlas. Las más usuales son lectura o escritura de e-mails, navegar por internet o utilizar redes sociales. Esto distrae a quien lo hace y restringe al resto del curso de su participación activa.\n\nPuntualidad y Asistencia:\n\nSerá necesario ingresar a clases en forma puntual y permanecer en la misma sin salir, a menos que haya una urgencia. Se requerirá como mínimo un 75% de asistencia. Es importante que quien tuviera problemas para estar a tiempo o para asistir, se ponga en contacto lo antes posible con la coordinadora del curso. Los alumnos que lleguen más de 15 minutos tarde serán considerados ausentes de la sesión.\n\nResponsabilidad en los grupos (si aplica):\n\nTodos los miembros del grupo han de contribuir al esfuerzo del equipo. Si surgen problemas con algún miembro del equipo, es responsabilidad de cada grupo tratar de resolverlo.\n\nGrabación de clases:\n\nLa clase se grabará para apoyar a aquellos estudiantes que hayan tenido problemas de conectividad durante la sesión. Se disponibilizará por 60 días en la plataforma online del curso, para visualizar sin opción de descarga. Después de 60 días y por políticas de la Universidad para cursos sincrónicos, la clase se borra del servidor."
  },
  {
    "objectID": "intro_r.html#r-project",
    "href": "intro_r.html#r-project",
    "title": "2  Introducción a R Project",
    "section": "2.1 R Project",
    "text": "2.1 R Project\n\n\n\n\n\nR Project es un lenguaje programación multiparadigma (procedural, imperativo, orientado a objetos y funcional enfocado a aplicaciones estadísticas. Por estadísticas se debe entender también los campos de estudio que se basan o las utilizan como economía, finanzas, ciencia de datos, machine learning, etc.\nPara la instalación de seguir las instrucción indicadas en Section A.1.\n\n2.1.1 Ventajas de Utilizar R Project\n1. R es un software libre\n\nLa libertad de ejecutar el programa como desee y con cualquier propósito\nEstudiar el funcionamiento del programa y adaptarlo a sus necesidades.\nRescribir copias para ayudar a los demás.\nManejar el programa y publicar las mejorar, de manera que toda comunidad se beneficie.\n\n2. R es multiplataforma\n\nR funciona en Mac, Windows y en numerosos sistemas UNIX. Esto significa que cualquier persona puede trabajar con tus datos, figuras, análisis y más importante aún usar tus instrucciones (también conocido como scripts o código) para generar las figuras y el análisis. Así que cualquier persona, y en cualquier lugar del mundo, con acceso a cualquier Sistema Operativo puede usar R Project sin ninguna licencia.\n\n3. R es de código abierto\n\nExiste una gran comunidad de voluntarios trabajando para mejorarlo, lo cual permite ser moldeado y dirigido a cuestiones específicas. Creando así programas y paquetes que funcionen en el entorno R. Programas tales como RStudio, Java GUI for R, R-commander, RKWard, entre otros, y con más de 19.000 paquetes indexados en CRAN (Comprehensive R Archive Network), Bioconductor, Github y R-Forge.\n\n4. Todo dentro de un mismo entorno\n\nR remplaza la combinación de varios programas para el proceso de análisis de datos, por ejemplo Excel, ArcGis, QGis, SigmaPlot, entre otros. Esto no solo resulta en el alto costo de las licencias de múltiples programas, si no también, en la gran cantidad de archivos con diferentes formatos que no podrían leer otros programas. En cambio con solo utilizar R, puedes realizar todo el análisis de datos e inclusive leer archivos de diferentes formatos.\n\n\n\n\nRstudio Ejecutándose"
  },
  {
    "objectID": "intro_r.html#rstudio",
    "href": "intro_r.html#rstudio",
    "title": "2  Introducción a R Project",
    "section": "2.2 Rstudio",
    "text": "2.2 Rstudio\n\n\n\n\n\nRStudio es un entorno de desarrollo integrado (IDE) para R Project y Python. Incluye una consola, un editor que resalta la sintaxis y admite la ejecución directa del código, y herramientas para graficar, el historial, la depuración y la gestión del espacio de trabajo. RStudio está disponible en ediciones comerciales y de código abierto y se ejecuta en el escritorio (Windows, Mac y Linux).\nPara instalar RStudio se debe seguir las instrucciones señaladas en el apéndice Section A.2\n\n\n\n\n2.2.1 Librerías en R\nEn R, una librería es un conjunto de funciones, datos y recursos adicionales que se agrupan para facilitar tareas específicas de programación, análisis de datos o visualización. Estas librerías son paquetes de software que amplían las funcionalidades básicas de R y permiten a los usuarios realizar tareas más avanzadas de manera eficiente.\nExisten una gran variedad de librerías disponibles en R, cada una diseñada para abordar un campo o área de aplicación particular. A continuación, mencionaré algunos de los campos más comunes en los que se utilizan las librerías de R:\n\nAnálisis de datos:\n\nR es ampliamente utilizado en el análisis de datos y estadísticas. Librerías como “dplyr”, “tidyr” y “ggplot2” son muy populares en este campo. Estas librerías proporcionan funciones para el manejo de datos, filtrado, transformación, agregación y visualización.\n\nAprendizaje automático (Machine Learning):\n\nR es una opción popular para aplicar algoritmos de aprendizaje automático. Librerías como “caret”, “randomForest” y “glmnet” ofrecen una amplia gama de algoritmos y herramientas para entrenar modelos de machine learning, realizar validación cruzada, seleccionar características y evaluar el rendimiento de los modelos.\n\nProcesamiento de texto y lenguaje natural:\n\nPara el análisis de texto y procesamiento del lenguaje natural, existen librerías como “tm”, “stringr” y “text2vec”. Estas librerías permiten realizar tareas como tokenización, limpieza de texto, extracción de características y modelado de temas.\n\nVisualización de datos:\n\nR es conocido por su capacidad para generar gráficos y visualizaciones de datos. Librerías como “ggplot2”, “plotly” y “lattice” ofrecen herramientas para crear gráficos estáticos y dinámicos, mapas, diagramas de dispersión y muchas otras visualizaciones.\n\n\nEstos son solo algunos ejemplos de los campos en los que se utilizan las librerías de R. Es importante destacar que la comunidad de R es muy activa y constantemente se desarrollan nuevas librerías para abordar diferentes necesidades en diversos campos de aplicación. El uso de estas librerías no solo ahorra tiempo y esfuerzo, sino que también permite a los programadores y analistas aprovechar las mejores prácticas y métodos establecidos en sus respectivos campos.\n\n\n2.2.2 Ejemplo de Instalación de Librerías desde R\nPodemos instalar paquetes usando la función install.packages(), dando como argumento el nombre del paquete que deseamos instalar, entre comillas.\nPara instalar librerías se puede hacer directamente desde la consola de RStudio, por ejemplo:\n\ninstall.packages(\"dplyr\") # Se puede instalar más de una librería a la vez\n\n\n\n2.2.3 Ejemplo de Instalación de Librerías desde Rstudio\nTambién se pude instalar librerías del Panel “Packages”\n\n\n\nY por último se puede instalar desde Pestaña “Tools” -&gt; “Install Packages”:"
  },
  {
    "objectID": "intro_r.html#directorios-de-trabajos",
    "href": "intro_r.html#directorios-de-trabajos",
    "title": "2  Introducción a R Project",
    "section": "2.3 Directorios de Trabajos",
    "text": "2.3 Directorios de Trabajos\nUn directorio de trabajo, también conocido como carpeta de trabajo, es una ubicación específica en un sistema de archivos donde se almacenan y organizan los archivos relacionados con un proyecto o una tarea determinada. Estos directorios son esenciales para mantener un entorno de desarrollo ordenado y estructurado. Aquí tienes algunas razones por las que son importantes:\n\nOrganización:\n\nLos directorios de trabajo permiten organizar y clasificar los archivos de un proyecto. Puedes crear subdirectorios para agrupar archivos relacionados, como código fuente, recursos multimedia, documentación, pruebas, entre otros. Esto facilita la búsqueda y el acceso a los archivos necesarios, lo que ahorra tiempo y evita la confusión.\n\nMantenimiento:\n\nAl utilizar directorios de trabajo adecuados, es más sencillo realizar tareas de mantenimiento en un proyecto. Puedes realizar actualizaciones, realizar pruebas, corregir errores y agregar nuevas funcionalidades de manera más eficiente. Además, si trabajas en equipo, un directorio de trabajo bien estructurado permite a los miembros del equipo colaborar de manera más fluida y reducir posibles conflictos al fusionar sus cambios.\n\nPortabilidad:\n\nLos directorios de trabajo facilitan la portabilidad de un proyecto. Si necesitas mover o copiar tu proyecto a otro lugar, simplemente tendrás que llevar el directorio principal y todos los subdirectorios y archivos asociados estarán incluidos. Esto garantiza que no falten archivos esenciales y que el proyecto se pueda ejecutar sin problemas en un nuevo entorno.\n\n\n\n2.3.1 Directorios de Trabajo en RStudio\nDefinir directorio de Trabajo con RStudio se puede hacer de varias formas:\n\nDesde Rstudio.\n\nSession -&gt; Set Working Directory -&gt; Choose Directory\n\n\n\n\n\n\n\n\nMediante Códigos.\n\nDefinir Directorio de Trabajo con una función\n\nsetwd(\"/Users/denisberroeta/Library/CloudStorage/OneDrive-UniversidadAdolfoIbanez/Goblab/Reportes/reportes_book\")\n\nConsultar Directorio de Trabajo\n\ngetwd()\n\n[1] \"/Users/denisberroeta/Library/CloudStorage/OneDrive-UniversidadAdolfoIbanez/Goblab/Reportes/reportes_book\""
  },
  {
    "objectID": "intro_r.html#referencias",
    "href": "intro_r.html#referencias",
    "title": "2  Introducción a R Project",
    "section": "2.4 Referencias:",
    "text": "2.4 Referencias:\n\nR para Ciencia de Datos\nRStudio para Estadística Descriptiva en Ciencias Sociales"
  },
  {
    "objectID": "variables_R.html#tipos-de-objetos-en-r",
    "href": "variables_R.html#tipos-de-objetos-en-r",
    "title": "3  Variables en R",
    "section": "3.1 Tipos de Objetos en R",
    "text": "3.1 Tipos de Objetos en R\nLos Datos en R se pueden clasificar por su dimensiones y los tipos de Datos que permiten almacenar, como se muestra en la siguiente tabla:\n\n\n\nDimensiones\nHomogéneos\nHeterogéneos\n\n\n\n\n1d\nAtomic vector\nList\n\n\n2d\nMatrix\nData frame\n\n\nnd\nArray\n\n\n\n\nFuente: http://adv-r.had.co.nz/Data-structures.html\nR nos permite definir variables que pueden ser luego usadas en las distintas operaciones. El lenguaje no solo permite definir escalares (variable de un numero), si no también variables que sean un conjunto de numero o caracteres ordenados.\n\n3.1.1 Variables Numéricas\n\n# La asignación en R son válidos 2 métodos '&lt;-' o '='\nx &lt;- 7 # Definir variable (escalar) x que sea igual a 7\nx # Mostrar que es x\n\n[1] 7\n\ny &lt;- 3 + 2 * x # Crear y como funcion de x \ny\n\n[1] 17\n\nclass(y)\n\n[1] \"numeric\"\n\n\nNúmeros Random con decimales\n\nru &lt;- runif(n = 100, min = 1, max = 10)\nru\n\n  [1] 5.930788 3.956131 3.342021 8.697688 9.944607 2.994681 8.525285 5.047273\n  [9] 2.850082 9.774288 5.226254 3.780178 5.223975 5.208808 1.878857 7.971354\n [17] 6.128305 8.561189 1.243277 3.978106 7.700536 4.839797 9.439901 4.071227\n [25] 1.988674 4.730944 3.084477 9.362690 1.157382 7.293323 1.729778 3.423252\n [33] 9.463366 4.647926 5.398147 7.740617 9.775634 6.411100 1.475157 5.839752\n [41] 7.729371 2.686535 7.247792 4.461482 1.613324 9.616716 6.746802 6.804118\n [49] 4.834852 3.362311 6.682948 4.445659 4.538496 8.205258 3.564600 9.279856\n [57] 2.065776 5.121146 1.678057 4.998802 8.961468 5.339518 9.883989 6.581984\n [65] 7.924488 1.872681 3.681108 3.580355 3.794134 9.793604 3.835547 6.493651\n [73] 9.802915 2.561087 7.903989 6.319108 5.478905 3.295461 7.752855 6.892406\n [81] 4.595018 6.246136 9.303504 3.098247 9.998047 2.188718 8.328250 5.993208\n [89] 4.742395 5.028677 1.810516 5.621878 9.772403 3.515527 9.999783 8.260599\n [97] 5.386895 6.820558 4.539352 3.451335\n\n\n\nhist(ru, breaks = 20, col = \"orange\", border = \"gray60\", \n     main = \"Histograma de valores Random\")\n\n\n\n\n\n\n\n\nNúmeros Random Enteros\nSimular los lanzamientos de un dado\n\nsample.int(n = 6, size = 10, replace = T)\n\n [1] 4 5 2 2 5 3 4 3 3 4\n\n\n\n\n3.1.2 Variables de Caracter\n\nch &lt;- \"Chile\" # Definir variable (objeto) ch que sea la palabra \"Chile\"\nsn &lt;- \"Santiago\"\nch # Mostrar ch\n\n[1] \"Chile\"\n\nsn\n\n[1] \"Santiago\"\n\n\nUnir variables de texto con paste()\n\nch &lt;- \"Chile\" # Definir variable (objeto) ch que sea la palabra \"Chile\"\nsn &lt;- \"Santiago\"\nunion &lt;- paste(sn,ch, sep = \", \")\nunion\n\n[1] \"Santiago, Chile\"\n\n\nUtilizar paste0()\n\nunion &lt;- paste(\"Provincia de \", sn,ch, sep = \", \")\nunion\n\n[1] \"Provincia de , Santiago, Chile\"\n\nunion0 &lt;- paste0(\"Provincia de \", sn, \", \", ch)\nunion0\n\n[1] \"Provincia de Santiago, Chile\"\n\n\nBuscar y reemplazar con gsub\n\nav &lt;- \"Av. Apoquindo\"\ncomuna &lt;- \"comuna de Las Condes\"\ncalle &lt;- paste(av, comuna, union0, sep = \", \")\ncalle\n\n[1] \"Av. Apoquindo, comuna de Las Condes, Provincia de Santiago, Chile\"\n\n# reemplazar Av. por Avenida\ncalle_new &lt;- gsub(pattern = \"Av.\", replacement = \"Avenida\", x = calle)\ncalle_new\n\n[1] \"Avenida Apoquindo, comuna de Las Condes, Provincia de Santiago, Chile\""
  },
  {
    "objectID": "variables_R.html#estructuras-de-datos",
    "href": "variables_R.html#estructuras-de-datos",
    "title": "3  Variables en R",
    "section": "3.2 Estructuras de Datos",
    "text": "3.2 Estructuras de Datos\nLas variables pueden ser un conjunto de números y caracteres ordenados de varias maneras. El orden que se les da depende de lo que queremos lograr con estos.\n\nVector\nMatrices\nDataframes\nFactores\nListas\n\n\n3.2.1 Vectores\nVector Cadenas unidimensionales (es decir una sola columna o fila) de un tipo único de valores (numéricos, caracteres, etc.)\n\nvec &lt;-  c(4, 3, 1, 5, 8, 16)\nvec\n\n[1]  4  3  1  5  8 16\n\nclass(vec)\n\n[1] \"numeric\"\n\nstr(vec)\n\n num [1:6] 4 3 1 5 8 16\n\n\nPodemos seleccionar parte del vector:\n\n# EL primer índice en R es 1 (en otros lenguajes de programación es 0)\nvec[3]\n\n[1] 1\n\n\nLa selección también puede ser hecha con una condición, de tal manera que solo seleccione aquella parte del vector que cumple con la condición.\nMayor a:\n\nvec[vec &gt;= 4]\n\n[1]  4  5  8 16\n\n\nContenido en:\n\nvec[vec %in% c(3, 8, 7, 29)]\n\n[1] 3 8\n\n\nNegación de la condición:\n\nvec[!vec &lt;= 3]\n\n[1]  4  5  8 16\n\n\nTambién podemos realizar operaciones matemáticas simples aplicadas al vector, por ejemplo una suma:\n\nvec2  &lt;-  c(7, 10, 1)\nvec + vec2\n\n[1] 11 13  2 12 18 17\n\n\n\n\n3.2.2 Listas\nSon estructuras eficientes y flexibles, que permiten combinar distintas clases de elementos :\n\nlista &lt;-  list(1, 2, 3, \"cosa\", x, y)\nlista\n\n[[1]]\n[1] 1\n\n[[2]]\n[1] 2\n\n[[3]]\n[1] 3\n\n[[4]]\n[1] \"cosa\"\n\n[[5]]\n[1] 7\n\n[[6]]\n[1] 17\n\nstr(lista)\n\nList of 6\n $ : num 1\n $ : num 2\n $ : num 3\n $ : chr \"cosa\"\n $ : num 7\n $ : num 17\n\n\n\n#Tambien se puede seleccionar parte de una lista, usando el doble corchete:\nlista[[3]]\n\n[1] 3\n\n\nComo inspeccionar una lista con Rstudio\n\n\n\n\n\n3.2.3 Matrices\nSon estructuras de datos con 2 dimensiones, horizontal y la vertical (filas y columnas). Podemos construirlas usando la función “matrix”, con un vector inicial y sus dimensiones:\n\nn &lt;- matrix(c(1.3, 2.8, 3.5, 6.4, 5.3, 6.2, 7, 4.5, 2.4, 6.3, 5.6, 5.3, 6.6, 7, 4.3),\n  nrow = 5, ncol = 3, byrow = TRUE)\nn\n\n     [,1] [,2] [,3]\n[1,]  1.3  2.8  3.5\n[2,]  6.4  5.3  6.2\n[3,]  7.0  4.5  2.4\n[4,]  6.3  5.6  5.3\n[5,]  6.6  7.0  4.3\n\n\nLa matriz tiene 2 dimensiones, por lo que para seleccionar partes de ella es necesario declarar dos dimensiones separadas por una coma. A la izquierda van las filas y a la derecha las columnas. Un valor vacío indica que se seleccionan todos los valores posibles.\n\nn[1,2]\n\n[1] 2.8\n\n\n\nn[,3]\n\n[1] 3.5 6.2 2.4 5.3 4.3\n\n\n\n\n3.2.4 Dataframes\nEstructura mas clásica de datos, es una matriz pero con mas atributos como nombres de columna y/o fila. Es lo mas similar en R a una tabla excel o la tabla de atributos. La manera mas simple de crear un dataframe es a partir de una matriz usando la función as.data.frame() :\n\ndf&lt;- as.data.frame(n)\ndf\n\n   V1  V2  V3\n1 1.3 2.8 3.5\n2 6.4 5.3 6.2\n3 7.0 4.5 2.4\n4 6.3 5.6 5.3\n5 6.6 7.0 4.3\n\n\nPodemos asignar nombres a las columnas del dataframe\n\nnames(df)&lt;- c(\"control_1\",\"control_2\",\"examen\")\ndf\n\n  control_1 control_2 examen\n1       1.3       2.8    3.5\n2       6.4       5.3    6.2\n3       7.0       4.5    2.4\n4       6.3       5.6    5.3\n5       6.6       7.0    4.3\n\n\nY a las filas del dataframe\n\ndf$alumno &lt;- c(\"Sofia\",\"Tomas\",\"Luciano\",\"Julian\",\"Gabriela\")\ndf\n\n  control_1 control_2 examen   alumno\n1       1.3       2.8    3.5    Sofia\n2       6.4       5.3    6.2    Tomas\n3       7.0       4.5    2.4  Luciano\n4       6.3       5.6    5.3   Julian\n5       6.6       7.0    4.3 Gabriela\n\n\nTambién podemos realizar operaciones entre vectores del dataframe:\n\ndf$promedio_final &lt;-  0.3*df$control_1 + 0.3*df$control_2 + 0.4*df$examen\ndf\n\n  control_1 control_2 examen   alumno promedio_final\n1       1.3       2.8    3.5    Sofia           2.63\n2       6.4       5.3    6.2    Tomas           5.99\n3       7.0       4.5    2.4  Luciano           4.41\n4       6.3       5.6    5.3   Julian           5.69\n5       6.6       7.0    4.3 Gabriela           5.80"
  },
  {
    "objectID": "funciones.html#operaciones-básicas-en-r",
    "href": "funciones.html#operaciones-básicas-en-r",
    "title": "4  Funciones en R",
    "section": "4.1 Operaciones Básicas en R",
    "text": "4.1 Operaciones Básicas en R\n\n4.1.1 Operaciones Matemáticas\nEn R, es posible realizar operaciones matemáticas básicas utilizando los operadores aritméticos estándar. Estos operadores incluyen:\n\nSuma (+): se utiliza para sumar dos valores.\nResta (-): se utiliza para restar un valor de otro.\nMultiplicación (*): se utiliza para multiplicar dos valores.\nDivisión (/): se utiliza para dividir un valor por otro.\nExponenciación (^): se utiliza para elevar un valor a una potencia.\nMódulo (%%): se utiliza para encontrar el resto de la división de un valor por otro.\n\nEstos operadores se pueden utilizar con números enteros, decimales y variables numéricas. Además, también se pueden utilizar paréntesis para especificar el orden de las operaciones.\nA continuación, se presentan algunos ejemplos de operaciones matemáticas básicas en R:\n\n# Suma\n2 + 3 # resultado: 5\n\n[1] 5\n\n# Resta\n5 - 2 # resultado: 3\n\n[1] 3\n\n# Multiplicación\n2 * 4 # resultado: 8\n\n[1] 8\n\n# División\n10 / 2 # resultado: 5\n\n[1] 5\n\n# Exponenciación\n2^3 # resultado: 8\n\n[1] 8\n\n# Módulo\n15 %% 4 # resultado: 3\n\n[1] 3\n\n# Utilizando paréntesis para especificar el orden de las operaciones\n(2 + 3) * 4 # resultado: 20\n\n[1] 20\n\n\nEs importante tener en cuenta que R sigue las reglas de precedencia de las operaciones matemáticas. Esto significa que las operaciones dentro de los paréntesis se evalúan primero, seguidas de la exponenciación, la multiplicación y la división, y finalmente la suma y la resta. Si se requiere un orden específico de operaciones, se deben utilizar paréntesis para indicarlo.\nAdemás, R también cuenta con una variedad de funciones matemáticas incorporadas, como “sin”, “cos”, “tan”, “log”, “exp”, entre otras, que se pueden utilizar para realizar operaciones más complejas.\nTambién se pueden aplica a un elemento a al objeto espacial completo\n\na &lt;- 13\nb &lt;- c(20,30,22,2,1)\n\nsum(b) # suma\n\n[1] 75\n\nsqrt(b) # find the square root of x\n\n[1] 4.472136 5.477226 4.690416 1.414214 1.000000\n\n\n\nmean(b)\n\n[1] 15\n\nmin(b)\n\n[1] 1\n\nmax(b)\n\n[1] 30\n\n\n\n\n4.1.2 Funciones Útiles de propósito general\n\nrep(1, 10)\n\n [1] 1 1 1 1 1 1 1 1 1 1\n\nrep(\"HAHA\", 10)\n\n [1] \"HAHA\" \"HAHA\" \"HAHA\" \"HAHA\" \"HAHA\" \"HAHA\" \"HAHA\" \"HAHA\" \"HAHA\" \"HAHA\"\n\nseq(1, 10)\n\n [1]  1  2  3  4  5  6  7  8  9 10\n\nseq(1, 10, by = 2)\n\n[1] 1 3 5 7 9\n\nifelse(3 &gt; 5, 1, \"this is false\")\n\n[1] \"this is false\"\n\n\n\npaste(\"Hola\", \"amigo\")\n\n[1] \"Hola amigo\"\n\npaste(\"Hello\", \"amigo\", sep = \"--\")\n\n[1] \"Hello--amigo\"\n\npaste0(\"Hello\", \"amigo\")\n\n[1] \"Helloamigo\"\n\ntolower(\"HAHAHAHAH\")\n\n[1] \"hahahahah\"\n\ntoupper(\"hueuehuehuheuhe\")\n\n[1] \"HUEUEHUEHUHEUHE\""
  },
  {
    "objectID": "funciones.html#operaciones-lógicas",
    "href": "funciones.html#operaciones-lógicas",
    "title": "4  Funciones en R",
    "section": "4.2 Operaciones Lógicas",
    "text": "4.2 Operaciones Lógicas\nEn R, los operadores lógicos se utilizan para realizar comparaciones lógicas entre valores o expresiones. Estos operadores devuelven valores booleanos (TRUE o FALSE) según se cumpla o no la condición.\nA continuación se presentan los operadores lógicos en R:\n\n\n\n\n\nOperador\nSignificado\nEjemplo\n\n\n\n\n==\nIgual a\n2 == 2 (TRUE)\n\n\n!=\nDiferente a\n2 != 3 (TRUE)\n\n\n&gt;\nMayor que\n3 &gt; 2 (TRUE)\n\n\n&lt;\nMenor que\n2 &lt; 3 (TRUE)\n\n\n&gt;=\nMayor o igual que\n3 &gt;= 2 (TRUE)\n\n\n&lt;=\nMenor o igual que\n2 &lt;= 3 (TRUE)\n\n\n&\nOperador lógico AND\n2 &lt; 3 & 3 &gt; 1 (TRUE)\n\n\n|\nOperador lógico OR\n2 &lt; 3 | 3 &lt; 1 (TRUE)\n\n\n!\nOperador lógico NOT\n!(2 == 3) (TRUE)\n\n\n\n\n\n\n\n\n4.2.1 Operador de igualdad: (==)\nEste operador se utiliza para comparar si dos valores son iguales. Retorna TRUE si la condición se cumple y FALSE en caso contrario.\n\na &lt;- 2\nb &lt;- 3\na == b # FALSE\n\n[1] FALSE\n\n\n\n\n4.2.2 Operador de desigualdad: (!=)\nEste operador se utiliza para comparar si dos valores son diferentes. Retorna TRUE si la condición se cumple y FALSE en caso contrario.\n\na &lt;- 2\nb &lt;- 3\na != b # TRUE\n\n[1] TRUE\n\n\n\n\n4.2.3 Operador de mayor que: (&gt;)\nEste operador se utiliza para comparar si un valor es mayor que otro. Retorna TRUE si la condición se cumple y FALSE en caso contrario.\n\na &lt;- 2\nb &lt;- 3\nb &gt; a # TRUE\n\n[1] TRUE\n\n\n\n\n4.2.4 Operador de menor que: (&lt;)\nEste operador se utiliza para comparar si un valor es menor que otro. Retorna TRUE si la condición se cumple y FALSE en caso contrario.\n\na &lt;- 2\nb &lt;- 3\na &lt; b # TRUE\n\n[1] TRUE\n\n\n\n\n4.2.5 Operador de mayor o igual que: (&gt;=)\nEste operador se utiliza para comparar si un valor es mayor o igual que otro. Retorna TRUE si la condición se cumple y FALSE en caso contrario.\n\na &lt;- 2\nb &lt;- 3\nb &gt;= a # TRUE\n\n[1] TRUE\n\n\n\n\n4.2.6 Operador de menor o igual que: (&lt;=)\nEste operador se utiliza para comparar si un valor es menor o igual que otro. Retorna TRUE si la condición se cumple y FALSE en caso contrario.\n\na &lt;- 2\nb &lt;- 3\na &lt;= b # TRUE\n\n[1] TRUE\n\n\n\n\n4.2.7 Operador lógico AND: (&)\nEste operador se utiliza para evaluar dos o más condiciones y retornar TRUE si todas se cumplen, de lo contrario retorna FALSE.\n\na &lt;- 2\nb &lt;- 3\nc &lt;- 4\na &lt; b & b &lt; c # TRUE\n\n[1] TRUE\n\n\n\n\n4.2.8 Operador lógico OR: (|)\nEste operador se utiliza para evaluar dos o más condiciones y retornar TRUE si al menos una se cumple, de lo contrario retorna FALSE.\n\na &lt;- 2\nb &lt;- 3\nc &lt;- 4\na &gt; b | b &lt; c # TRUE\n\n[1] TRUE\n\n\nOperador lógico NOT: (!) Este operador se utiliza para negar una condición. Si la condición es TRUE, retorna FALSE, y si la condición es FALSE, retorna TRUE.\n\na &lt;- 2\nb &lt;- 3\n!(a == b) # TRUE\n\n[1] TRUE\n\n\nEs importante tener en cuenta que los operadores lógicos se pueden utilizar en combinación para crear expresiones lógicas más complejas. Además, los operadores lógicos también se pueden utilizar en las estructuras de control condicionales, como if/else y switch, para tomar decisiones basadas en condiciones lógicas."
  },
  {
    "objectID": "funciones.html#sec-funciones",
    "href": "funciones.html#sec-funciones",
    "title": "4  Funciones en R",
    "section": "4.3 Crear Funciones Propias",
    "text": "4.3 Crear Funciones Propias\nEn R, es posible crear funciones propias para realizar tareas específicas y reutilizarlas en diferentes partes de un programa. Para crear una función en R, se utiliza la siguiente estructura:\n\nnombre_de_la_funcion &lt;- function(argumentos) {\n  cuerpo_de_la_funcion\n}\n\nPor ejemplo, se puede crear una función que calcule la suma de dos números:\n\nsuma &lt;- function(a, b) {\n  resultado &lt;- a + b\n  return(resultado)\n}\n\nresultado_suma &lt;- suma(2, 3)\nprint(resultado_suma) # 5\n\n[1] 5\n\n\nPor ejemplo, se puede crear una función que eleve al cuadrado:\n\ncuadrado &lt;- function(x) { # x = parámetro\n    y = x ^ 2 # asiganción de variables solo dentro de la función\n    return(y) # especificar valor retornado (no necesario completamente)\n}\n\n\na &lt;- 13\nb &lt;- c(20,30,22,2,1)\ncuadrado(a)\n\n[1] 169\n\ncuadrado(b)\n\n[1] 400 900 484   4   1\n\n\nEs importante tener en cuenta que los nombres de las funciones en R deben cumplir las mismas reglas que los nombres de las variables. Además, es recomendable incluir comentarios explicativos dentro del cuerpo de la función para facilitar su comprensión y uso posterior.\nActividad:\nActividad: Crear una función que calcule la hipotenusa de un triángulo rectángulo (Teorema de Pitágoras):\n\n\n\nEstablece que el cuadrado de la longitud de la hipotenusa es igual a la suma de los cuadrados de las longitudes de los catetos.\nc^2 = {a^2}+{b^2}\nPor lo cual:\nc = \\sqrt{{a^2}+{b^2}}\n\n\n\n\n\n\nAyuda\n\n\n\n\nhipotenusa &lt;- function(a, b){\n  #h &lt;-     # En esta parte escribir la función\n  return(h)\n}\nr1 &lt;-  hipotenusa(a = 5,  b = 5)\n\n\n\nEncontrar la Hipotenusa de:\nh=?, a = 10, b = 6\nh=?, a = 5, b = 4\nh=?, a = 3, b = 4"
  },
  {
    "objectID": "loops_R.html#estructuras-condicionales",
    "href": "loops_R.html#estructuras-condicionales",
    "title": "5  Estructura de Control en R",
    "section": "5.1 Estructuras condicionales",
    "text": "5.1 Estructuras condicionales\nLas estructuras condicionales son una de las tres estructuras de control principales en R. Estas estructuras permiten ejecutar un bloque de código solo si se cumple una condición determinada.\nLa estructura condicional más común en R es “if”. La sintaxis básica de la estructura “if” es la siguiente:\n\nif(Condición) {\n  operaciones_si_la_condición_es_TRUE\n}\n\nLa “condición” es una expresión lógica que evalúa a verdadero o falso. Si la condición es verdadera, el bloque de código dentro del “if” se ejecutará. Si la condición es falsa, el bloque de código dentro del “if” se ignorará.\nPor ejemplo, le pedimos a R que nos muestre el texto “Verdadero” si la condición se cumple.\n\n# Se cumple la condición y se muestra \"verdadero\"\nif(4 &gt; 3) {\n  \"Verdadero\"\n}\n\n[1] \"Verdadero\"\n\n\n\n# No se cumple la condición y no pasa nada\nif(4 &gt; 5) {\n  \"Verdadero\"\n}\n\nTambién se puede agregar un bloque de código opcional para el caso en que la condición sea falsa utilizando la estructura “else”. La sintaxis básica de la estructura “if” con “else” es la siguie\nSI esta condición es es cierta, ENTONCES haz estas operaciones, DE OTRO MODO haz estas otras operaciones.\n\nif(condición) {\n  operaciones_si_la_condición_es_TRUE\n} else {\n  operaciones_si_la_condición_es_FALSE\n}\n\nUsando los ejemplos anteriores, podemos mostrar “Falso” si no se cumple la condición, en lugar de que no ocurra nada\n\n# Se cumple la condición y se muestra \"Verdadero\"\nif(4 &gt; 3) {\n  \"Verdadero\"\n} else {\n  \"Falso\"\n}\n\n[1] \"Verdadero\"\n\n\nLa estructura “ifelse” es otra forma de estructura condicional que permite ejecutar diferentes bloques de código en función de la condición. La sintaxis básica de la estructura “ifelse” es la siguiente:\n\nifelse(condición, expresión1, expresión2)\n\nSi la “condición” es verdadera, se ejecutará “expresión1”. Si la “condición” es falsa, se ejecutará “expresión2”.\nAdemás, se pueden anidar varias estructuras condicionales utilizando la sintaxis de “if” y “else”. Por ejemplo:\n\nif (condición1) {\n  # Código a ejecutar si la condición1 es verdadera\n} else if (condición2) {\n  # Código a ejecutar si la condición1 es falsa y la condición2 es verdadera\n} else {\n  # Código a ejecutar si todas las condiciones son falsas\n}\n\nEn resumen, las estructuras condicionales en R son herramientas muy útiles para controlar el flujo de ejecución de un programa en función de ciertas condiciones. Estas estructuras permiten crear soluciones más eficientes y complejas al permitir que los programas tomen decisiones y realicen acciones en función de las condiciones que se presenten."
  },
  {
    "objectID": "loops_R.html#estructuras-de-bucles",
    "href": "loops_R.html#estructuras-de-bucles",
    "title": "5  Estructura de Control en R",
    "section": "5.2 Estructuras de bucles",
    "text": "5.2 Estructuras de bucles\nLas estructuras de bucles son una de las tres estructuras de control principales en R. Estas estructuras permiten ejecutar un bloque de código repetidamente mientras se cumpla una condición determinada. En R, existen tres estructuras de bucles principales: “while”, “for” y “repeat”.\nBeneficios\n\nEs más fácil ver el objetivo de tu código; lo diferente llama más atención a la vista que aquello que permanece igual.\nEs más sencillo responder a cambios en los requerimientos. A medida que tus necesidades cambian, solo necesitarás realizar cambios en un lugar, en vez de recordar cambiar en cada lugar donde copiaste y pegaste el código.\nEs probable que tengas menos errores porque cada línea de código es utilizada en más lugares.\n\n\n5.2.1 Estructura de bucle “for”:\nLa estructura “for” permite repetir la ejecución de un bloque de código un número determinado de veces. La sintaxis básica de la estructura “for” es la siguiente:\n\nfor (variable in secuencia) {\n  # Código a ejecutar para cada elemento en la secuencia\n}\n\nLa “secuencia” es un objeto que contiene una serie de elementos. La “variable” toma el valor de cada elemento de la secuencia en cada iteración del bucle. En cada iteración, se ejecutará el bloque de código dentro del “for” para ese valor de la variable.\nEjemplo simple: print una secuencia\n\nfor (i in 1:5){\n  print(i)\n}\n\n[1] 1\n[1] 2\n[1] 3\n[1] 4\n[1] 5\n\n\nEjemplo 2: Guardando los resultados en un vector\n\ndado &lt;- 1:6\nmi_vector &lt;- NULL\nfor(cara in dado) {\n  mi_vector[cara] &lt;- cara ^ 2\n}\nmi_vector\n\n[1]  1  4  9 16 25 36\n\n\nEjemplo 3: Loops con vectores\n\nalumnos &lt;- c(\"Carmen\", \"Adriana\", \"Marco\", \"Fabi\", \"Brenda\")\n\nfor(i in 1:length(alumnos)) {\n  print(paste(\"Hola,\", alumnos[i], sep = \" \"))\n}\n\n[1] \"Hola, Carmen\"\n[1] \"Hola, Adriana\"\n[1] \"Hola, Marco\"\n[1] \"Hola, Fabi\"\n[1] \"Hola, Brenda\"\n\n\nEjemplo 4: loops en Dataframes\n\ndf &lt;- data.frame(a = rnorm(10), b = rnorm(10),\n                 c = rnorm(10), d = rnorm(10))\n\nfor(i in 1:ncol(df)){\n  promedio = mean(df[,i])\n  print(promedio)\n}\n\n[1] -0.1810021\n[1] 0.249796\n[1] 0.0492003\n[1] -0.4137817\n\n\n\n\n5.2.2 Estructura de bucle “while”:\nLa estructura “while” permite repetir la ejecución de un bloque de código mientras se cumpla una condición determinada. La sintaxis básica de la estructura “while” es la siguiente:\n\nwhile (condición) {\n  # Código a ejecutar mientras se cumpla la condición\n}\n\nLa “condición” es una expresión lógica que evalúa a verdadero o falso. Si la condición es verdadera, se ejecutará el bloque de código dentro del “while”. Este proceso se repetirá hasta que la condición sea falsa.\n\n\n5.2.3 Estructura de bucle “repeat”:\n\nrepeat {\n  # Código a ejecutar de manera indefinida\n  if (condición) {\n    break\n  }\n}\n\nEl bloque de código dentro del “repeat” se ejecutará de manera indefinida hasta que se encuentre la sentencia “break”, que permite salir del bucle. La “condición” es una expresión lógica que evalúa a verdadero o falso. Si la condición es verdadera, se ejecutará la sentencia “break” y se saldrá del bucle."
  },
  {
    "objectID": "loops_R.html#estructuras-de-control-de-flujo",
    "href": "loops_R.html#estructuras-de-control-de-flujo",
    "title": "5  Estructura de Control en R",
    "section": "5.3 Estructuras de control de flujo",
    "text": "5.3 Estructuras de control de flujo\n“next” y “break” son palabras clave importantes en R que se utilizan en las estructuras de control de flujo, específicamente en las estructuras de bucle. “next” se utiliza para saltar a la siguiente iteración del bucle sin ejecutar el resto del código dentro del bucle, mientras que “break” se utiliza para detener el bucle de forma abrupta, incluso si la condición del bucle todavía se cumple.\n\n5.3.1 Estructuras de control “next”:\n“next” se utiliza en una estructura de bucle para saltar a la siguiente iteración del bucle sin ejecutar el resto del código dentro del bucle. Es decir, si se encuentra la palabra clave “next” dentro de un bucle, se omitirá el código que viene después y el bucle pasará inmediatamente a la siguiente iteración. La palabra clave “next” es útil cuando se desea saltar una iteración específica del bucle, sin afectar el resto del código.\nPor ejemplo, en el siguiente código se utiliza la palabra clave “next” para omitir la impresión del número 3 dentro del bucle “for”:\n\nfor (i in 1:5) {\n  if (i == 3) {\n    next\n  }\n  print(i)\n}\n\n[1] 1\n[1] 2\n[1] 4\n[1] 5\n\n\n\n\n5.3.2 Estructuras de control “break”:\n“break”, por otro lado, se utiliza en una estructura de bucle para detener el bucle de forma abrupta, incluso si la condición del bucle todavía se cumple. Es decir, si se encuentra la palabra clave “break” dentro de un bucle, se detendrá el bucle de inmediato y se continuará con la ejecución del código que viene después del bucle. La palabra clave “break” es útil cuando se desea detener el bucle en un punto específico sin tener que esperar a que la condición del bucle se deje de cumplir.\nPor ejemplo, en el siguiente código se utiliza la palabra clave “break” para detener el bucle “while” cuando el valor de “i” es mayor que 5:\n\ni &lt;- 1\nwhile (i &lt; 10) {\n  if (i &gt; 5) {\n    break\n  }\n  print(i)\n  i &lt;- i + 1\n}\n\n[1] 1\n[1] 2\n[1] 3\n[1] 4\n[1] 5"
  },
  {
    "objectID": "loops_R.html#referencias",
    "href": "loops_R.html#referencias",
    "title": "5  Estructura de Control en R",
    "section": "5.4 Referencias",
    "text": "5.4 Referencias\n\nhttps://bookdown.org/jboscomendoza/r-principiantes4/estructuras-de-control.html\nhttps://es.r4ds.hadley.nz/iteración.html\nhttps://rstudio-pubs-static.s3.amazonaws.com/623888_497a5388a98545c48e9b5b6bec4056f6.html"
  },
  {
    "objectID": "tidyverse_R.html#introducción-a-tidyverse",
    "href": "tidyverse_R.html#introducción-a-tidyverse",
    "title": "6  Tidyverse en R",
    "section": "6.1 Introducción a Tidyverse",
    "text": "6.1 Introducción a Tidyverse\nTidyverse es una colección de paquetes diseñados para Ciencia de Datos.\n\n\n\n\n\n\n# instalación\ninstall.packages(\"tidyverse\")\n\nTodos los paquetes comparten una filosofía de diseño, una gramática y estructuras de datos.\nEsta filosofía promueve\n\nEn Pipes, navegarás dentro del pipe, %&gt;%, para anidar instrucciones\nSi bien copiar-y-pegar (copy-and-paste) es una herramienta poderosa, deberías evitar utilizarla más de dos veces. Repetir el código es peligroso porque puede llevar a errores e inconsistencias.\nA medida que comiences a escribir funciones más potentes, necesitarás una base sólida acerca de las estructuras de datos.\nLas funciones nos permiten evitar la repetición de código; sin embargo, muchas veces necesitas repertir las mismas acciones con diferentes inputs. Puedes hacer esto con herramientas de iteración."
  },
  {
    "objectID": "tidyverse_R.html#estructura-de-un-dataframe",
    "href": "tidyverse_R.html#estructura-de-un-dataframe",
    "title": "6  Tidyverse en R",
    "section": "6.2 Estructura de un dataframe",
    "text": "6.2 Estructura de un dataframe\n\n\n\nLectura de Base de SII\n\nsuppressPackageStartupMessages(library(dplyr))\nsuppressPackageStartupMessages(library(sf))\ntbl_sii  &lt;- readRDS(\"data/sii/mz_constru_SII.rds\") %&gt;% \n  st_drop_geometry() # descartar geometrias solo usar la tabla de datos\n\nhead(tbl_sii)\n\n# A tibble: 6 × 10\n  n_com   manzana   reg cod_com num_manz oficinas comercio vivienda total   AREA\n  &lt;chr&gt;   &lt;chr&gt;   &lt;dbl&gt;   &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;\n1 IQUIQUE 1201-0      1    1201        0        0        0        0     0   585.\n2 IQUIQUE 1201-0      1    1201        0        0        0        0     0 17291.\n3 ALTO H… 1211-0      1    1211        0        0        0        0     0  1859.\n4 ALTO H… 1211-0      1    1211        0        0        0        0     0   442.\n5 ALTO H… 1211-0      1    1211        0        0        0        0     0   205.\n6 ALTO H… 1211-0      1    1211        0        0        0        0     0  1200."
  },
  {
    "objectID": "tidyverse_R.html#funciones-básicas-dplyr",
    "href": "tidyverse_R.html#funciones-básicas-dplyr",
    "title": "6  Tidyverse en R",
    "section": "6.3 Funciones básicas dplyr",
    "text": "6.3 Funciones básicas dplyr\n\n\n\n\n6.3.1 Select\nselect Seleccionar variables relevantes\n\n# seleccionar nomnres de columnas que deseo conservar\ntbl_sii %&gt;%\n  select(n_com, oficinas, comercio, vivienda)\n\n# A tibble: 210,662 × 4\n   n_com         oficinas comercio vivienda\n   &lt;chr&gt;            &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n 1 IQUIQUE              0        0        0\n 2 IQUIQUE              0        0        0\n 3 ALTO HOSPICIO        0        0        0\n 4 ALTO HOSPICIO        0        0        0\n 5 ALTO HOSPICIO        0        0        0\n 6 ALTO HOSPICIO        0        0        0\n 7 ALTO HOSPICIO        0        0        0\n 8 ALTO HOSPICIO        0        0        0\n 9 ALTO HOSPICIO        0        0        0\n10 ALTO HOSPICIO        0        0        0\n# ℹ 210,652 more rows\n\n# seleccionar nomnres de columnas que deseo eliminar anteponiendo un \"-\"\ntbl_sii %&gt;%\n  select(-cod_com)\n\n# A tibble: 210,662 × 9\n   n_com         manzana   reg num_manz oficinas comercio vivienda total   AREA\n   &lt;chr&gt;         &lt;chr&gt;   &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;\n 1 IQUIQUE       1201-0      1        0        0        0        0     0   585.\n 2 IQUIQUE       1201-0      1        0        0        0        0     0 17291.\n 3 ALTO HOSPICIO 1211-0      1        0        0        0        0     0  1859.\n 4 ALTO HOSPICIO 1211-0      1        0        0        0        0     0   442.\n 5 ALTO HOSPICIO 1211-0      1        0        0        0        0     0   205.\n 6 ALTO HOSPICIO 1211-0      1        0        0        0        0     0  1200.\n 7 ALTO HOSPICIO 1211-0      1        0        0        0        0     0  4548.\n 8 ALTO HOSPICIO 1211-0      1        0        0        0        0     0   130.\n 9 ALTO HOSPICIO 1211-0      1        0        0        0        0     0   300.\n10 ALTO HOSPICIO 1211-0      1        0        0        0        0     0  6488.\n# ℹ 210,652 more rows\n\n\n\n\n6.3.2 Filter\n\nmi_comuna &lt;- \"LAS CONDES\" \n\nsii_com &lt;- tbl_sii %&gt;%\n  filter(n_com == mi_comuna) \n \nhead(sii_com, 5)\n\n# A tibble: 5 × 10\n  n_com    manzana   reg cod_com num_manz oficinas comercio vivienda total  AREA\n  &lt;chr&gt;    &lt;chr&gt;   &lt;dbl&gt;   &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 LAS CON… 15108-…    13   15108     2358        0        0     1316  1390 2358.\n2 LAS CON… 15108-…    13   15108     2360        0        0     1590  1622 2280.\n3 LAS CON… 15108-…    13   15108     2362        0        0     1436  1502 2659.\n4 LAS CON… 15108-…    13   15108     2364        0        0     1926  1926 3348.\n5 LAS CON… 15108-…    13   15108     2366        0        0     2584  2656 4390.\n\n\nfilter: Operadores Lógicos\n\n\n\n\n\n\n\n\n\n\n\nOperador\nComparación\nEjemplo\nResultado\n\n\n\n\nx | y\nx Ó y es verdadero\nTRUE | FALSE\nTRUE\n\n\nx & y\nx Y y son verdaderos\nTRUE & FALSE\nFALSE\n\n\n!x\nx no es verdadero (negación)\n!TRUE\nFALSE\n\n\nisTRUE(x)\nx es verdadero (afirmación)\nisTRUE(TRUE)\nTRUE\n\n\n\n\n\nFiltrar las manzanas que tengan valores de oficina y comercio mayores a 0\n\nsii_com %&gt;%\n  filter(oficinas &gt; 0 & comercio &gt; 0) \n\n# A tibble: 493 × 10\n   n_com manzana   reg cod_com num_manz oficinas comercio vivienda  total   AREA\n   &lt;chr&gt; &lt;chr&gt;   &lt;dbl&gt;   &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;\n 1 LAS … 15108-…    13   15108     2400     322     3388    65422  1.22e5 1.06e5\n 2 LAS … 15108-…    13   15108     2407   30864     2518        0  7.50e4 4.04e3\n 3 LAS … 15108-…    13   15108     1392     424     9902        0  1.58e4 1.27e4\n 4 LAS … 15108-…    13   15108      336   45190     1432        0  8.28e4 3.24e3\n 5 LAS … 15108-…    13   15108      338     424.     244.    9993. 1.17e4 1.11e4\n 6 LAS … 15108-…    13   15108      338     414.     238.    9765. 1.14e4 1.06e4\n 7 LAS … 15108-…    13   15108      339    1120     5274     7748  1.49e4 9.38e3\n 8 LAS … 15108-…    13   15108      340     250       72    55206  7.23e4 1.22e4\n 9 LAS … 15108-…    13   15108      342     494     1914    47690  6.97e4 1.62e4\n10 LAS … 15108-…    13   15108      349   17826     1568        0  3.38e4 1.84e3\n# ℹ 483 more rows"
  },
  {
    "objectID": "tidyverse_R.html#resúmenes-estadísticos-con-dplyr",
    "href": "tidyverse_R.html#resúmenes-estadísticos-con-dplyr",
    "title": "6  Tidyverse en R",
    "section": "6.4 Resúmenes Estadísticos con dplyr",
    "text": "6.4 Resúmenes Estadísticos con dplyr\n\n\n\nContabilizar cuantos metros cuadrados de oficina por cada comuna.\n\ntbl_resumen &lt;-  tbl_sii %&gt;%\n  group_by(n_com) %&gt;%\n  summarise(Cantidad_mz = n(),\n            Total_of = sum(oficinas)) %&gt;%\n  arrange(desc(Total_of)) # Ordenar\n\ntbl_resumen\n\n# A tibble: 170 × 3\n   n_com           Cantidad_mz Total_of\n   &lt;chr&gt;                 &lt;int&gt;    &lt;dbl&gt;\n 1 SANTIAGO CENTRO         686  6105996\n 2 LAS CONDES             2310  4248336\n 3 PROVIDENCIA             885  3495426\n 4 HUECHURABA             1160  1006138\n 5 QUILICURA              2592   751874\n 6 VITACURA                950   743734\n 7 SANTIAGO SUR            623   669270\n 8 Ã‘UÃ‘OA                1337   637982\n 9 SANTIAGO OESTE          586   586724\n10 PUDAHUEL               2775   561868\n# ℹ 160 more rows\n\n\nActividad\n\nContabilizar cuantos metros cuadrados de Comercio hay por cada comuna rdenar de mayor a menor.\nCrear tabla con las 10 comunas que tienen mayor densisdad de Comercio\n\n\n\n\n\n\n\nDensidad de comercio\n\n\n\nSe puede entender como la división de la cantidad de metros cuadrados de comercio dividio por el total de metros cuadrados."
  },
  {
    "objectID": "tidyverse_R.html#visualización-de-variables",
    "href": "tidyverse_R.html#visualización-de-variables",
    "title": "6  Tidyverse en R",
    "section": "6.5 Visualización de Variables",
    "text": "6.5 Visualización de Variables\n\n6.5.1 Función Plot\n\noptions(scipen = 999) # evitas notación cientiífica\nhist(sii_com$vivienda, breaks = 50,\n     main = \"Histograma mt2 de Viviendas\", col = \"#225ea8\")\n\n\n\n# colores:https://colorbrewer2.org/#type=sequential&scheme=BuGn&n=3\n\n\n\n6.5.2 Package ggplot2\n\nlibrary(ggplot2)\nggplot(sii_com, aes(x = vivienda)) + \n  geom_histogram(bins = 50, fill = \"#225ea8\", color =\"black\")\n\n\n\n\n\n\n\n\nggplot2 con estilos y características\n\nggplot(sii_com, aes(x = vivienda)) +\n  geom_histogram(bins = 50, color = \"#c7e9b4\", fill = \"#1d91c0\")+\n  theme_bw()+\n  labs(title=\"Histograma mt2 de Viviendas\", x =\"Mt2. Viviendas\", y = \"Frecuencias\")+\n  theme(plot.title = element_text(face = \"bold\",colour= \"gray60\", size=10))"
  },
  {
    "objectID": "tidyverse_R.html#referencias",
    "href": "tidyverse_R.html#referencias",
    "title": "6  Tidyverse en R",
    "section": "6.6 Referencias:",
    "text": "6.6 Referencias:\n\nR para Ciencia de Datos\nRStudio para Estadística Descriptiva en Ciencias Sociales\nhttps://bookdown.org/jboscomendoza/r-principiantes4/estructuras-de-control.html\nhttps://rstudio-pubs-static.s3.amazonaws.com/623888_497a5388a98545c48e9b5b6bec4056f6.html\nPaletas de colores"
  },
  {
    "objectID": "reporte.html#introducción",
    "href": "reporte.html#introducción",
    "title": "7  Rmarkdown",
    "section": "7.1 Introducción",
    "text": "7.1 Introducción\nRmarkdown es que permite generar informes a partir de R.Este permite incluir texto, comandos de R, imágenes y gráficos a un documento."
  },
  {
    "objectID": "reporte.html#markdown",
    "href": "reporte.html#markdown",
    "title": "7  Rmarkdown",
    "section": "7.2 Markdown",
    "text": "7.2 Markdown\n\n\n\nFuncionamiento de compilación de una archivo Rmarkdown (.rmd)\n\n\n\nRMarkdown:\n\nBasado en el lenguaje markdown - funcionalidad que busca convertir rápida y fácilmente texto plano tipo bloc de notas a formato HTML - RMarkdown es un tipo de documento de RStudio que permite integrar texto con código de R.\n\nKnitr:\n\nEste paquete integra en un sólo archivo markdown el texto ingresado en formato RMarkdown y los resultados de la ejecución de los códigos construidos mediante R.\n\nPandoc:\n\nSe trata de un paquete de R que convierte el formato markdown a alguno de los diferentes formatos de reporte ya señalados (HTML y editor de texto tipo Word).\n\nLaTex:\n\nEs una aplicación computacional en sí misma, enfocada en la preparación de documentos para su publicación con una alta calidad profesional del formato final. Está pensado para ser utilizado en procesos editoriales de alta complejidad y exigencia de calidad.\n\nArchivo .Rmd:\n\nSon simplemente documento de texto (se pueden escribir en cualquier editor de texto, por ejemplo Notepad); pero facilitan mucho la tarea de generar informes o presentaciones con contenido estadístico, ya que permiten mezclar en un mismo documento texto y código R."
  },
  {
    "objectID": "reporte.html#instalación-de-complementos",
    "href": "reporte.html#instalación-de-complementos",
    "title": "7  Rmarkdown",
    "section": "7.3 Instalación de complementos",
    "text": "7.3 Instalación de complementos\nInstalación de rmarkdown\n\n\n\nInstalar LaTeX para los reportes PDF, a través de la librería `tinytex’:"
  },
  {
    "objectID": "reporte.html#creación-de-reporte",
    "href": "reporte.html#creación-de-reporte",
    "title": "7  Rmarkdown",
    "section": "7.4 Creación de Reporte",
    "text": "7.4 Creación de Reporte\nExisten en Rstudio dos formas de trabajar con un archivo Rmd (RMarkdown) con código directo llamado source o a través de Visual Editor (Shift + Ctrl + F4 ), como se observa a continuación:\n\n\n\nVisual Editor (Shift + Ctrl + F4 )"
  },
  {
    "objectID": "reporte.html#elementos-de-un-documento-rmarkdown",
    "href": "reporte.html#elementos-de-un-documento-rmarkdown",
    "title": "7  Rmarkdown",
    "section": "7.5 Elementos de un documento Rmarkdown",
    "text": "7.5 Elementos de un documento Rmarkdown\nAspetos generales del texto. Referencias Link\n\ntitle Texto entre comillas que servirá de título general al documento.\nsubtitle. Texto entre comillas que servirá de subtítulo para el título general del documento.\nauthor Texto entre comillas para indicar el nombre del o los autores.\ndate. Campo para indicar la fecha. En el texto, con la expresión today, se solicita que imprima la fecha actual según el calendario del sistema operativo.\nbibliography. Se indica el nombre del archivo que contiene los datos para construir el listado de referencia bibliográficas. Este archivo es de formato BibTex y se construye usando un gestor de referencias como Zotero.\npdf_document: indica el formato preestablecido para compilar el documento. En este caso, se trata de un PDF. Puede ser html_document o word_document. El usuario puede escoger la modalidad que desee al compilar usando las opciones del botón knit; si se compila sin escoger ninguna opción, se compilará según el formato indicado en este encabezado.\nfig_caption: indica si las figuras deben incorporar leyendas. latex_engine: permite definir el motor de LaTex utilizado para compilar los documentos.\nnumber_sections: si está definido como yes define que se numerarán los títulos y sutítulos a lo largo del documento, de manera automática y correlativa.\ntoc: es la abreviación de table of contents; si está definido como yes incorporará al inicio del documento una tabla de contenidos construida a partir de los tres primeros niveles de los títulos y subtítulos de sección utilizados."
  },
  {
    "objectID": "reporte.html#sintaxis",
    "href": "reporte.html#sintaxis",
    "title": "7  Rmarkdown",
    "section": "7.6 Sintaxis",
    "text": "7.6 Sintaxis\n\n7.6.1 Títulos\n\n\n\n7.6.2 Formato a texto\nDeclaración:\n*Cursiva*,  **Negrita**, ~~Tachado~~ y Km^2^\nResultados:\nCursiva, Negrita, Tachado y Km2\n\n\n7.6.3 Imágenes\nDeclaración:\n![Logo de R](images/Rlogo.png)\nResultados:\n\n\n\nLogo de R\n\n\n\n\n7.6.4 Links\nEste es el formato para crear links [R para Ciencia de Datos](https://es.r4ds.hadley.nz)\nEste es el resultado: R para Ciencia de Datos\n\n\n7.6.5 Listas\n* Item 1\n    + Item 2a\n    + Item 2b\n\nÍtem 1\n\nItem 2a\nItem 2b\n\n\n\n\n7.6.6 Formulas\nEsto es una función en la línea $h^2 = a^2+b^2$\nEsto es una función en la línea h^2 = a^2+b^2\n$$h = \\sqrt{a^2+b^2}$$ \nh = \\sqrt{a^2+b^2}"
  },
  {
    "objectID": "tarea_1.html#enunciado-general",
    "href": "tarea_1.html#enunciado-general",
    "title": "Tarea 1",
    "section": "Enunciado General",
    "text": "Enunciado General\nIntegrantes: 1 (Individual).\nFecha de Entrega: 21 de Junio, 23:59 horas.\nSe utilizará la base del servicio de impuestos internos (SII), se le descartará la geometría (st_drop_geometry()) ya que se utilizará la tabla de datos, como se observa a continuación:\n\nlibrary(dplyr)\nlibrary(sf)\ntbl_sii  &lt;- readRDS(\"data/sii/mz_constru_SII.rds\") %&gt;% \n  st_drop_geometry() # descartar geometrias solo usar la tabla de datos\n\nSe debe además seleccionar una columna de su interés, como en el siguiente código de ejemplo.\n\nmi_comuna &lt;- \"LAS CONDES\" \n\nsii_com &lt;- tbl_sii %&gt;%\n  filter(n_com == mi_comuna)"
  },
  {
    "objectID": "tarea_1.html#parte-1-función",
    "href": "tarea_1.html#parte-1-función",
    "title": "Tarea 1",
    "section": "Parte 1: Función",
    "text": "Parte 1: Función\nEscriba una función que calcule la desidad de viviendas por manzana. Y aplicarla generando una nueva columna con esa información. Para escribir la función se puede apoyar en la Section 4.3.\n\n\n\n\n\n\nDensidad\n\n\n\nSe puede entender como la división de la cantidad de metros cuadrados de viviendas dividio por el total de metros cuadrados (AREA)."
  },
  {
    "objectID": "tarea_1.html#parte-2",
    "href": "tarea_1.html#parte-2",
    "title": "Tarea 1",
    "section": "Parte 2",
    "text": "Parte 2\nCrear un ciclo iterativo con la función for() que itere por todas las comunas de la base del SII, para lo cual primeramente deben obtener todos los nombres de comuna, lo cual se pude obtener usando la función unique() sobre la columna n_com. Seguidamente crear una variable vacía (NULL) para que vaya almacenando los resultados. Finalmente utilizar la función for() que se encuentra en la siguiente sección Section 5.2.1\n\n# comunas &lt;- ...\nresults &lt;- NULL\nfor(com in comunas){\n  print(com)\n  # ...\n}"
  },
  {
    "objectID": "tarea_1.html#parte-3",
    "href": "tarea_1.html#parte-3",
    "title": "Tarea 1",
    "section": "Parte 3",
    "text": "Parte 3\nSimilar a la parte anterior de la tarea ahora, ahora utilizando las funciones de la librerías dplyr generar un tabla que contega por comuna la suma de viviendas, oficinas, comercio, ordenadas des forma descendente por la variable comercio.\nSeleccionar las 10 primeras comunas con valores de suma de comercio más altos.\n\noptions(scipen = 999)\n# tab_res &lt;- ... generar tabla resumen\n\n# seleccionar los 10 primeros\ntab_res &lt;- tab_res %&gt;% slice(1:10)\n\n\n\n\nRealizar gráfico de barras para dimensionar diferencias. Ejemplo de visualización de las 10 comunas con mayor cantidad de metros cuadrados de comercio.\n\nlibrary(ggplot2)\nggplot(tab_res, aes(x = sum_com, y = n_com)) +\n  geom_bar(stat = \"identity\", fill= \"orange\")+\n  theme_bw()  +\n  labs(title=\"Suma de Comercio y Oficinas\",\n       x =\"Mt2. Comercio\", y = \"Comunas\")+\n  theme(plot.title = element_text(face = \"bold\",colour= \"gray60\", size=10))\n\n\n\n\nResultado esperado (puede cambiar opciones de visualización si lo desea)"
  },
  {
    "objectID": "recursos.html#sec-installR",
    "href": "recursos.html#sec-installR",
    "title": "Appendix A — Instalación de Recursos",
    "section": "A.1 Instalación de R Project",
    "text": "A.1 Instalación de R Project\n\n\n\n\n\nPrimero se debe instalar R Project desde su sitio oficial https://cran.r-project.org/index.html, se ejecuta el instalador que se descarga dependiendo del sistema operativo del PC, como se muestra en las siguientes figuras:\n\n\nInstalación de R para Windows\n\n\n\n\nInstalar Rtools (solo Sistema Operativo Windows)\n\n\n\n\n\n\n\nInstalación de R para Mac\n\n\n\n\nR Project Ejecutándose"
  },
  {
    "objectID": "recursos.html#sec-installRStudio",
    "href": "recursos.html#sec-installRStudio",
    "title": "Appendix A — Instalación de Recursos",
    "section": "A.2 Instalación de RStudio",
    "text": "A.2 Instalación de RStudio\n\n\n\n\n\nSe recomienta instalar RStudio desde el siguiente link, que es Interfaz de Usuario de R Project, desde su sitio web oficial, el cual permite acceder con mayor facilidad a sus funciones y potencialidades de R.\n\n\n\n\n\n\n\n\n\nA.2.1 RStudio Cloud\nRStudio Cloud es una versión ligera del IDE RStudio alojada en la la nube que permite a cualquiera hacer, compartir, enseñar y aprender Ciencias de Datos Online. Tiene una versión gratuita limitada.\n\nA.2.1.1 Características:\n\nAnalyze your data using the RStudio IDE, directly from your browser.\nShare projects with your team, class, workshop or the world.\nTeach data science with R to your students or colleagues.\nLearn data science in an instructor-led environment or with interactive tutorials."
  },
  {
    "objectID": "espacial_R.html#introducción",
    "href": "espacial_R.html#introducción",
    "title": "Appendix B — Datos Espaciales",
    "section": "B.1 Introducción",
    "text": "B.1 Introducción\nLos elementos tienen una geometría que describe su ubicación en la Tierra y atributos que describen otras propiedades. La geometría de un árbol, por ejemplo, puede ser la delineación de su copa, de su tallo o el punto que indica su centro. Otras propiedades pueden ser su altura, color, diámetro a la altura del pecho en una fecha determinada, etc."
  },
  {
    "objectID": "espacial_R.html#lectura-de-insumos-espaciales",
    "href": "espacial_R.html#lectura-de-insumos-espaciales",
    "title": "Appendix B — Datos Espaciales",
    "section": "B.2 Lectura de Insumos Espaciales",
    "text": "B.2 Lectura de Insumos Espaciales\n\n# install.packages(\"sf\")\nlibrary(sf)\ncrs_ll &lt;- \"+proj=longlat +datum=WGS84 +no_defs\"\ncrs_utm &lt;- \"+proj=utm +zone=19 +south +datum=WGS84 +units=m +no_defs +ellps=WGS84 +towgs84=0,0,0\"\ncenso &lt;-  readRDS(\"data/censo/zonas_urb_consolidadas.rds\")"
  },
  {
    "objectID": "espacial_R.html#transformar-a-objeto-sf-simple-features",
    "href": "espacial_R.html#transformar-a-objeto-sf-simple-features",
    "title": "Appendix B — Datos Espaciales",
    "section": "B.3 Transformar a objeto sf (simple features)",
    "text": "B.3 Transformar a objeto sf (simple features)\n\n# transformar a objeto sf (simple features)\ncenso_sf &lt;- st_as_sf(censo)\n# head(censo_sf)\nnames(censo_sf)\n\n [1] \"REGION\"     \"NOM_REGION\" \"PROVINCIA\"  \"NOM_PROVIN\" \"COMUNA\"    \n [6] \"NOM_COMUNA\" \"URBANO\"     \"DISTRITO\"   \"LOC_ZON\"    \"GEOCODIGO\" \n[11] \"AREA\"       \"COD_INE_15\" \"COD_INE_16\" \"VALIDO\"     \"KM2\"       \n[16] \"ESC_JH\"     \"PERS\"       \"M2_O\"       \"M2_C\"       \"DENS_HAB\"  \n[21] \"DENS_OF\"    \"DENS_COM\"   \"geometry\""
  },
  {
    "objectID": "espacial_R.html#filtros-espaciales-por-data",
    "href": "espacial_R.html#filtros-espaciales-por-data",
    "title": "Appendix B — Datos Espaciales",
    "section": "B.4 Filtros espaciales por data",
    "text": "B.4 Filtros espaciales por data\n\nlibrary(dplyr)\nmi_communa &lt;-  \"LAS CONDES\"\n\nzonas_com &lt;-  censo_sf %&gt;% \n  filter(NOM_COMUNA == mi_communa)\n\nzonas_com %&gt;% head()\n\nSimple feature collection with 6 features and 22 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -70.56629 ymin: -33.41713 xmax: -70.47884 ymax: -33.36421\nGeodetic CRS:  +proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0\n  REGION                       NOM_REGION PROVINCIA NOM_PROVIN COMUNA\n1     13 REGIÓN METROPOLITANA DE SANTIAGO       131   SANTIAGO  13114\n2     13 REGIÓN METROPOLITANA DE SANTIAGO       131   SANTIAGO  13114\n3     13 REGIÓN METROPOLITANA DE SANTIAGO       131   SANTIAGO  13114\n4     13 REGIÓN METROPOLITANA DE SANTIAGO       131   SANTIAGO  13114\n5     13 REGIÓN METROPOLITANA DE SANTIAGO       131   SANTIAGO  13114\n6     13 REGIÓN METROPOLITANA DE SANTIAGO       131   SANTIAGO  13114\n  NOM_COMUNA     URBANO DISTRITO LOC_ZON   GEOCODIGO      AREA  COD_INE_15\n1 LAS CONDES LAS CONDES        5       1 13114051001  346506.4 13114051001\n2 LAS CONDES LAS CONDES        4       1 13114041001 2797019.6 13114041001\n3 LAS CONDES LAS CONDES        4       3 13114041003 2530681.2 13114041003\n4 LAS CONDES LAS CONDES       16       2 13114161002 1497554.8 13114161002\n5 LAS CONDES LAS CONDES       15       3 13114151003  855603.3 13114151003\n6 LAS CONDES LAS CONDES        2       2 13114021002  594053.2 13114021002\n   COD_INE_16 VALIDO       KM2   ESC_JH PERS       M2_O      M2_C  DENS_HAB\n1 13114051001   TRUE 0.3465064 16.08958 4173  10910.000  18578.00 12043.068\n2 13114041001   TRUE 2.7970196 16.34331 4788   5820.806  48723.11  1711.822\n3 13114041003   TRUE 2.5306812 16.19528 6315 125513.194  84384.89  2495.376\n4 13114161002   TRUE 1.4975548 16.75400 2250    738.000     72.00  1502.449\n5 13114151003   TRUE 0.8556033 16.84848 4675   1130.005  51982.94  5463.981\n6 13114021002   TRUE 0.5940532 15.85904 3987  24382.000 298226.00  6711.520\n     DENS_OF     DENS_COM                       geometry\n1 31485.7121  53615.17494 MULTIPOLYGON (((-70.56008 -...\n2  2081.0745  17419.65356 MULTIPOLYGON (((-70.47951 -...\n3 49596.6041  33344.73221 MULTIPOLYGON (((-70.5267 -3...\n4   492.8033     48.07838 MULTIPOLYGON (((-70.50789 -...\n5  1320.7117  60755.89536 MULTIPOLYGON (((-70.51477 -...\n6 41043.4616 502019.00493 MULTIPOLYGON (((-70.53606 -..."
  },
  {
    "objectID": "espacial_R.html#visualización-cartográficas",
    "href": "espacial_R.html#visualización-cartográficas",
    "title": "Appendix B — Datos Espaciales",
    "section": "B.5 Visualización Cartográficas",
    "text": "B.5 Visualización Cartográficas\n\nB.5.1 Visualización estática Simple\n\n## Visualizar\n# Consideración el plot se realiza sobre la columna geometry\n\nnombre_plot &lt;-  paste0(\"COMUNA DE \", mi_communa)\nplot(zonas_com$geometry, main = nombre_plot,col =\"orange\")\n\n\n\n\n\n\n\n\n\n\nB.5.2 Visualización estática con ggplot2\n\nlibrary(ggplot2)\n\n# Visualización ggplot y sf\nggplot() +\n  geom_sf(data = zonas_com, fill = \"orange\", alpha=0.5)+\n  ggtitle(nombre_plot) +\n  theme_bw() +\n  theme(legend.position=\"none\")+\n  theme(panel.grid.major = element_line(colour = \"gray80\"),\n        panel.grid.minor = element_line(colour = \"gray80\"))\n\n\n\n\n\n\n\n\n\n\nB.5.3 Visualización Dinámica con mapview\n\n# install.packages(\"mapview\")\nlibrary(mapview)\nm &lt;- mapview(zonas_com, alpha = 0.5,\n        col.regions = \"orange\", color=\"gray80\",\n        legend =FALSE, cex = 3)\nm"
  },
  {
    "objectID": "espacial_R.html#volcano-en-3d",
    "href": "espacial_R.html#volcano-en-3d",
    "title": "Appendix B — Datos Espaciales",
    "section": "B.6 Volcano en 3D",
    "text": "B.6 Volcano en 3D\n\nlibrary(plotly)\n# volcano is a numeric matrix that ships with R\nfig &lt;- plot_ly(z = ~volcano)\nfig &lt;- fig %&gt;% add_surface()\n\nfig"
  },
  {
    "objectID": "espacial_R.html#referencias",
    "href": "espacial_R.html#referencias",
    "title": "Appendix B — Datos Espaciales",
    "section": "B.7 Referencias",
    "text": "B.7 Referencias\nSimple Features for R"
  },
  {
    "objectID": "times.html#lectura-de-archivo-con-tasaciones",
    "href": "times.html#lectura-de-archivo-con-tasaciones",
    "title": "Appendix C — Datos temporales",
    "section": "C.1 Lectura de archivo con tasaciones",
    "text": "C.1 Lectura de archivo con tasaciones\n\nlibrary(dplyr)\ntasacion &lt;- read.csv(\"data/tasaciones//base_250.csv\")\nhead(tasacion)\n\n\n\n\nTabla de Tasaciones\n\n\n\n\n\nX\nFecha_Tasacion\nNombre_Calle\nNumeracion\nComuna\nRegion\nTipo\nAno_Construccion\nM2_Terreno\nM2_Construccion\nTasacion_UF\n\n\n\n\n1\n2015-08-01T10:58:00Z\nGALVARINO\n886\nConcepcion\nRegion VIII\nDepartamento\n2014\nNULL\n45.04\n2182\n\n\n2\n2015-12-01T10:52:00Z\nNAHUELBUTA\n2255\nSan Pedro de la Paz\nRegion VIII\nDepartamento\n2007\nNULL\n47.35\n1944\n\n\n3\n2015-01-16T15:34:00Z\nAVENIDA JORGE ALESSANDRI RODRIGUEZ\n450\nConcepcion\nRegion VIII\nDepartamento\n2013\nNULL\n43.71\n1884\n\n\n4\n2015-01-20T10:27:00Z\nAVENIDA JORGE ALESSANDRI\n450\nConcepcion\nRegion VIII\nDepartamento\n2015\nNULL\n53.45\n2421\n\n\n5\n2015-01-23T16:06:00Z\nAVENIDA CHACABUCO\n333\nConcepcion\nRegion VIII\nDepartamento\n2008\nNULL\n54.13\n2421\n\n\n6\n2015-01-27T10:06:00Z\nAVENIDA ANDALUE\n2737\nSan Pedro de la Paz\nRegion VIII\nDepartamento\n2006\nNULL\n112.45\n3849"
  },
  {
    "objectID": "times.html#instalar-lubridate",
    "href": "times.html#instalar-lubridate",
    "title": "Appendix C — Datos temporales",
    "section": "C.2 Instalar lubridate",
    "text": "C.2 Instalar lubridate\n\n# Instalar librería\ninstall.packages(\"lubridate\")\n\n# Cargar Librería\nlibrary(lubridate)"
  },
  {
    "objectID": "times.html#manipulación-de-datos-temporales",
    "href": "times.html#manipulación-de-datos-temporales",
    "title": "Appendix C — Datos temporales",
    "section": "C.3 Manipulación de datos temporales",
    "text": "C.3 Manipulación de datos temporales\nConvertir variables variable fecha, de texto a date\n\ntasacion &lt;- tasacion_original %&gt;% \n  mutate(Fecha_Tasacion = ymd_hms(Fecha_Tasacion))\n\n\n\n\n\n\nX\nFecha_Tasacion\nNombre_Calle\nNumeracion\nComuna\nRegion\nTipo\nAno_Construccion\nM2_Terreno\nM2_Construccion\nTasacion_UF\n\n\n\n\n1\n2015-08-01 10:58:00\nGALVARINO\n886\nConcepcion\nRegion VIII\nDepartamento\n2014\nNULL\n45.04\n2182\n\n\n2\n2015-12-01 10:52:00\nNAHUELBUTA\n2255\nSan Pedro de la Paz\nRegion VIII\nDepartamento\n2007\nNULL\n47.35\n1944\n\n\n3\n2015-01-16 15:34:00\nAVENIDA JORGE ALESSANDRI RODRIGUEZ\n450\nConcepcion\nRegion VIII\nDepartamento\n2013\nNULL\n43.71\n1884\n\n\n4\n2015-01-20 10:27:00\nAVENIDA JORGE ALESSANDRI\n450\nConcepcion\nRegion VIII\nDepartamento\n2015\nNULL\n53.45\n2421\n\n\n5\n2015-01-23 16:06:00\nAVENIDA CHACABUCO\n333\nConcepcion\nRegion VIII\nDepartamento\n2008\nNULL\n54.13\n2421\n\n\n6\n2015-01-27 10:06:00\nAVENIDA ANDALUE\n2737\nSan Pedro de la Paz\nRegion VIII\nDepartamento\n2006\nNULL\n112.45\n3849"
  },
  {
    "objectID": "times.html#agregar-variables-temporales",
    "href": "times.html#agregar-variables-temporales",
    "title": "Appendix C — Datos temporales",
    "section": "C.4 Agregar Variables Temporales",
    "text": "C.4 Agregar Variables Temporales\n\ntasacion &lt;- tasacion %&gt;%\n  mutate(DIA = day(Fecha_Tasacion),\n         MES = month(Fecha_Tasacion),\n         AÑO = year(Fecha_Tasacion),\n         DIA_SEM = wday(Fecha_Tasacion, \n                        label = TRUE, abbr = FALSE,\n                        week_start = getOption(\"lubridate.week.start\", 1),\n                        locale =  Sys.getlocale(\"LC_TIME\")),\n         SEMANA = week(Fecha_Tasacion)) %&gt;% \n  mutate(HORA = hour(Fecha_Tasacion),\n         MINUTO = minute(Fecha_Tasacion))"
  },
  {
    "objectID": "times.html#gráficos-en-2-dimensiones",
    "href": "times.html#gráficos-en-2-dimensiones",
    "title": "Appendix C — Datos temporales",
    "section": "C.6 Gráficos en 2 Dimensiones",
    "text": "C.6 Gráficos en 2 Dimensiones\n\nt_h_semana &lt;- tasacion %&gt;%\n  group_by( DIA_SEM, HORA) %&gt;%\n  summarize(count = n(), .groups = \"keep\")\n\n\nnombre_plot &lt;- \"Hora Día\"\nplot &lt;- ggplot(t_h_semana, aes(x = HORA, y = DIA_SEM, fill = count)) +\n  scale_x_continuous(breaks =seq(1,24, 2))+\n  geom_tile() +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.6),\n        axis.title.x=element_blank(), axis.title.y=element_blank(),\n        panel.grid.major = element_line(colour = \"NA\"), \n        panel.grid.minor = element_line(colour = \"NA\"),\n        plot.title = element_text(hjust = 0.5, size = rel(1)), \n        plot.subtitle = element_text(hjust = 0.5, size = rel(1)),\n        panel.background = element_rect(fill = \"NA\", colour = \"NA\", linewidth = 1),\n        legend.title = element_blank(), legend.position=\"top\",\n        legend.direction=\"horizontal\", legend.key.width=unit(2, \"cm\"),\n        legend.key.height=unit(0.25, \"cm\"), legend.spacing=unit(-0.5,\"cm\"), \n        panel.spacing=element_blank()) +\n  labs(nombre_plot) +\n  scale_fill_gradient(low = \"gray98\", high = \"#27AE60\")\nplot"
  },
  {
    "objectID": "times.html#section",
    "href": "times.html#section",
    "title": "Appendix C — Datos temporales",
    "section": "C.7 ",
    "text": "C.7 \n\n\n\n\n\n\n\n\n\nGuardar un Gráfico\n\nnombre_plot &lt;- \"Tasaciones_dia_comuna\"\nnombre_imagen &lt;- paste0(\"../data/graficos/\",gsub(\" \", \"_\", nombre_plot) ,\".jpg\")\nggplot2::ggsave(filename = nombre_imagen, plot = gdc, height = 7, width = 9)"
  },
  {
    "objectID": "times.html#gráficos-dinámicos",
    "href": "times.html#gráficos-dinámicos",
    "title": "Appendix C — Datos temporales",
    "section": "C.8 Gráficos Dinámicos",
    "text": "C.8 Gráficos Dinámicos\nInstalar librería plotly\n\n# install.packages(\"plotly\")\nsuppressPackageStartupMessages(library(plotly))\n\nGráfico de Tasaciones por mes por Mes\n\nlibrary(ggplot2)\nlibrary(scales)\n\ntas_mes &lt;- tasacion %&gt;% \n  group_by(MES) %&gt;% \n  summarise(Cantidad = n(),  .groups = \"keep\")%&gt;% \n  mutate(MES = sprintf(\"%02d\", MES))\n\nnombre_plot &lt;- \"Tasaciones por Mes\"\ngm &lt;- ggplot() +\n  geom_bar(data = tas_mes, aes(x = MES, y = Cantidad, fill = MES),\n           stat = \"identity\",\n           alpha = 0.9, size = 0.5)+\n  scale_fill_viridis_d()+\n  ggtitle(lab =  nombre_plot )+\n  labs(fill = \"MES\")+\n  theme_bw()\n\nggplotly(gm)"
  },
  {
    "objectID": "tablas.html#kableextra",
    "href": "tablas.html#kableextra",
    "title": "Appendix D — Tablas en Markdown",
    "section": "D.1 kableExtra",
    "text": "D.1 kableExtra\nExisten muchas formas de generar tablas en markdown, para el caso de curso utilizaremos la librería kableExtra y su uso general se explica a continuación:\n\n\n\n\n\nInstalación de kableExtra\n\ninstall.packages(\"kableExtra\")\n# For dev version\n# install.packages(\"devtools\") devtools::install_github(\"haozhu233/kableExtra\")\n\nCargar Librería\n\noptions(kableExtra.latex.load_packages = FALSE) # tener todas posbilidades\nlibrary(kableExtra)\n\nPoner en el encabezado YAML\nheader-includes:\n  - \\usepackage{booktabs}\n  - \\usepackage{longtable}\n  - \\usepackage{array}\n  - \\usepackage{multirow}\n  - \\usepackage{wrapfig}\n  - \\usepackage{float}\n  - \\usepackage{colortbl}\n  - \\usepackage{pdflsca   pe}\n  - \\usepackage{tabu}\n  - \\usepackage{threeparttable}\n  - \\usepackage{threeparttablex}\n  - \\usepackage[normalem]{ulem}\n  - \\usepackage{makecell}\n  - \\usepackage{xcolor}\nGenerar una tabla de referencia\n\ndt &lt;- mtcars[1:5, 1:6]\ndt\n\n                   mpg cyl disp  hp drat    wt\nMazda RX4         21.0   6  160 110 3.90 2.620\nMazda RX4 Wag     21.0   6  160 110 3.90 2.875\nDatsun 710        22.8   4  108  93 3.85 2.320\nHornet 4 Drive    21.4   6  258 110 3.08 3.215\nHornet Sportabout 18.7   8  360 175 3.15 3.440\n\n\nTabla básica\n\nkbl(dt)\n\n\n\n\n\nmpg\ncyl\ndisp\nhp\ndrat\nwt\n\n\n\n\nMazda RX4\n21.0\n6\n160\n110\n3.90\n2.620\n\n\nMazda RX4 Wag\n21.0\n6\n160\n110\n3.90\n2.875\n\n\nDatsun 710\n22.8\n4\n108\n93\n3.85\n2.320\n\n\nHornet 4 Drive\n21.4\n6\n258\n110\n3.08\n3.215\n\n\nHornet Sportabout\n18.7\n8\n360\n175\n3.15\n3.440\n\n\n\n\n\n\n\nTabla con Caption\n\nkbl(dt, caption = \"Demo table\", booktabs = T) %&gt;% \n  kable_styling(latex_options = c(\"striped\", \"hold_position\"))\n\n\nDemo table\n\n\n\nmpg\ncyl\ndisp\nhp\ndrat\nwt\n\n\n\n\nMazda RX4\n21.0\n6\n160\n110\n3.90\n2.620\n\n\nMazda RX4 Wag\n21.0\n6\n160\n110\n3.90\n2.875\n\n\nDatsun 710\n22.8\n4\n108\n93\n3.85\n2.320\n\n\nHornet 4 Drive\n21.4\n6\n258\n110\n3.08\n3.215\n\n\nHornet Sportabout\n18.7\n8\n360\n175\n3.15\n3.440\n\n\n\n\n\n\n\nTamaño de fuente\n\nkbl(dt, booktabs = T) %&gt;% \n  kable_styling(font_size = 7)\n\n\n\n\n\nmpg\ncyl\ndisp\nhp\ndrat\nwt\n\n\n\n\nMazda RX4\n21.0\n6\n160\n110\n3.90\n2.620\n\n\nMazda RX4 Wag\n21.0\n6\n160\n110\n3.90\n2.875\n\n\nDatsun 710\n22.8\n4\n108\n93\n3.85\n2.320\n\n\nHornet 4 Drive\n21.4\n6\n258\n110\n3.08\n3.215\n\n\nHornet Sportabout\n18.7\n8\n360\n175\n3.15\n3.440\n\n\n\n\n\n\n\nEstilos Colores\n\nthat_cell &lt;- c(rep(F, 7), T)\nmtcars[1:8, 1:8] %&gt;%\n  kbl(booktabs = T, linesep = \"\") %&gt;%\n  kable_paper(full_width = T) %&gt;%\n  kable_styling(font_size = 11) %&gt;% \n  column_spec(2, color = spec_color(mtcars$mpg[1:8]),\n              link = \"https://haozhu233.github.io/kableExtra\") %&gt;% \n  column_spec(6, color = \"white\",background = spec_color(mtcars$drat[1:8], end = 0.7),\n              popover = paste(\"am:\", mtcars$am[1:8])) %&gt;% \n  column_spec(9,strikeout = that_cell, bold = that_cell, color = c(rep(\"black\", 7), \"red\"))\n\n\n\n\n\nmpg\ncyl\ndisp\nhp\ndrat\nwt\nqsec\nvs\n\n\n\n\nMazda RX4\n21.0\n6\n160.0\n110\n3.90\n2.620\n16.46\n0\n\n\nMazda RX4 Wag\n21.0\n6\n160.0\n110\n3.90\n2.875\n17.02\n0\n\n\nDatsun 710\n22.8\n4\n108.0\n93\n3.85\n2.320\n18.61\n1\n\n\nHornet 4 Drive\n21.4\n6\n258.0\n110\n3.08\n3.215\n19.44\n1\n\n\nHornet Sportabout\n18.7\n8\n360.0\n175\n3.15\n3.440\n17.02\n0\n\n\nValiant\n18.1\n6\n225.0\n105\n2.76\n3.460\n20.22\n1\n\n\nDuster 360\n14.3\n8\n360.0\n245\n3.21\n3.570\n15.84\n0\n\n\nMerc 240D\n24.4\n4\n146.7\n62\n3.69\n3.190\n20.00\n1"
  },
  {
    "objectID": "tablas.html#tablas-con-add-in",
    "href": "tablas.html#tablas-con-add-in",
    "title": "Appendix D — Tablas en Markdown",
    "section": "D.2 Tablas con Add-in",
    "text": "D.2 Tablas con Add-in\nInstalacción\n\n# install.packages(\"devtools\")\ndevtools::install_github(\"lbusett/insert_table\")\n\nUso Básico\nAl instalarlo, inserttable registra un nuevo Addin de RStudio (Insert Table) que puede utilizarse para insertar fácilmente una tabla en un documento Rmd. Para utilizarlo, abra un documento Rmd y, con el cursor dentro de un trozo r y seleccione “Addins –&gt; Insert Table”.\n\nUso de Copiar y Pegar\n\nMas referencias en acá"
  },
  {
    "objectID": "tablas.html#referencias-generales",
    "href": "tablas.html#referencias-generales",
    "title": "Appendix D — Tablas en Markdown",
    "section": "D.3 Referencias Generales",
    "text": "D.3 Referencias Generales\nReferencias para generar tablas con estilos\n\nhttp://haozhu233.github.io/kableExtra/awesome_table_in_pdf.pdf\nhttp://destio.us.es/calvo/ficheros/ComoCrearTablasRMarkdown_PedroLuque_2019Sep_librodigital.pdf\n\nTablas para html:\n\nhttp://haozhu233.github.io/kableExtra/awesome_table_in_html.html"
  },
  {
    "objectID": "tablas.html#tablas-con-add-in-insert_table",
    "href": "tablas.html#tablas-con-add-in-insert_table",
    "title": "Appendix D — Tablas en Markdown",
    "section": "D.2 Tablas con Add-in insert_table",
    "text": "D.2 Tablas con Add-in insert_table\nInstalación\n\n# install.packages(\"devtools\")\ndevtools::install_github(\"lbusett/insert_table\")\n\nUso Básico\nAl instalarlo, insert_table registra un nuevo Addin de RStudio (Insert Table) que puede utilizarse para insertar fácilmente una tabla en un documento Rmd. Para utilizarlo, abra un documento Rmd y, con el cursor dentro de un trozo r y seleccione “Addins –&gt; Insert Table”.\n\nUso de Copiar y Pegar\n\nMas referencias en acá"
  },
  {
    "objectID": "workflow.html#section",
    "href": "workflow.html#section",
    "title": "8  Flujos de Trabajo",
    "section": "8.1 ",
    "text": "8.1"
  },
  {
    "objectID": "workflow.html#section-1",
    "href": "workflow.html#section-1",
    "title": "8  Flujos de Trabajo",
    "section": "8.2 ",
    "text": "8.2"
  },
  {
    "objectID": "workflow.html#section-2",
    "href": "workflow.html#section-2",
    "title": "8  Flujos de Trabajo",
    "section": "8.3 ",
    "text": "8.3"
  },
  {
    "objectID": "workflow.html#section-3",
    "href": "workflow.html#section-3",
    "title": "8  Flujos de Trabajo",
    "section": "8.4 ",
    "text": "8.4"
  },
  {
    "objectID": "workflow.html#flujo-de-trabajo-general",
    "href": "workflow.html#flujo-de-trabajo-general",
    "title": "8  Flujos de Trabajo",
    "section": "8.1 Flujo de Trabajo General",
    "text": "8.1 Flujo de Trabajo General\nDenominaremos Flujo de Trabajo General a un proceso general de análisis de datos y concluir en oun reporte. Comienza con la Adquisisón de datos, ya sea cargando los datos directamente o conectarse a una base de datos.Posteriormente se puede establacer como la siguiente etapa denominada Data Clean o limpiza de datos correspondiente a la preparación de estos para ser insumo para análisis profundos, esta epata se realiza en R en el caso del presente curso. Análisis de Datos corresponde a la etapa donde se realiza el resumen o análisis de datos y se transforma en información, se conluyen resuemenes, tablas, gráficos, mapas y todo lo que sirva para explicar o reforzar las conclusiones de estos análisis, estos productos se pueden crear y almacenar para ser consumidos en el proceso posterior. Finalmente es la etapa del reporte que se realiza con R y Markdown, que consume los productos derivados de la etapa anterior e insumos externos que puede estar relaciones con el estilo y personalización del reporte como son portadas y logos."
  },
  {
    "objectID": "workflow.html#esquema-básico",
    "href": "workflow.html#esquema-básico",
    "title": "8  Flujos de Trabajo",
    "section": "8.2 Esquema Básico",
    "text": "8.2 Esquema Básico\nPara cumplir el esquema anterior se puede realizar de muchas formas, a continuación se explica el modelo básico para generar un informe. El principal elemnto es el Reporte RMarkdown que realiza todo, lee los datos, analiza, generar graficos y construye el documento.\n Es recomendable para informes únicos y sencillos."
  },
  {
    "objectID": "workflow.html#esquema-iterativo",
    "href": "workflow.html#esquema-iterativo",
    "title": "8  Flujos de Trabajo",
    "section": "8.3 Esquema Iterativo",
    "text": "8.3 Esquema Iterativo\nEl esquema iterátivo es más avanzado y está orientado para realizar múltiples reportes similares pero con diferentes unidades de análisis (personas, meses, comunas, sucursales, etc.). Este flujo de trabajo consta de dos elementos escenciales primero un reporte agnóstico o estandar que permita hacer el resultado variable de acuerdo a los datos de entrada pero manteniendo la estructura similar. El segundo elemento es una script en R que llamaremos main.R el que será el encargado de orquestar la ejecución de los reportes de forma iterativa.\n\nEste esquema es el recomendable seguir para cumplir con los objetivos del curso."
  },
  {
    "objectID": "workflow.html#esquema-iterativo-2",
    "href": "workflow.html#esquema-iterativo-2",
    "title": "8  Flujos de Trabajo",
    "section": "8.4 Esquema Iterativo 2",
    "text": "8.4 Esquema Iterativo 2\nEste segundo esquema iterativo en esencia el similar al anterior con la unica variaedad es que para la generación de productos de análisis se realice de forma independiente y con anterioridad del reporte, y solo el reporte solo lea los resultados y no calcule. Es útil cuando la generación de estos productos tome mucho tiempo de cálculo, como ocurre en ocasiones con modelos estadísticos o de machine learning, o mapas inclusive. Lo anterior permite que el tiempo de ejecución (renderizado) del reporte sea muy eficiente y rápido.\n\nRecomendable para usuarios más avanzados y cuando sus análisis sean de alto costo computacional y tiempo de ejecución."
  },
  {
    "objectID": "iter_graph.html#descripción",
    "href": "iter_graph.html#descripción",
    "title": "Appendix E — Gráficos Interativos",
    "section": "E.1 Descripción",
    "text": "E.1 Descripción\nEn este apéndice la idea es generar un mapa por cada una de las comuna de una provicia de forma iterativa, utilizando ciclos for que vimos en Section 5.2.1. Esto se puede aplicar para cualquier tipo de mapas y puede ser utilizado para preprocesar análisis, gráficos, modelos, etc. que tomen demasiado tiempo, entonces el hacerlo antes permite que la etapa de renderizado del markdown sea más eficiente."
  },
  {
    "objectID": "iter_graph.html#lectura-de-insumos",
    "href": "iter_graph.html#lectura-de-insumos",
    "title": "Appendix E — Gráficos Interativos",
    "section": "E.2 Lectura de Insumos",
    "text": "E.2 Lectura de Insumos\nLibrerías\n\nlibrary(sf)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(viridis)\n\nBase de Datos\nLa base que se utulizará corresponderá las zonas censales urbanas de Chile, para luego filtrar una provincia a elección para el elemplo será provincia de San Antonio que cuenta con 6 comunas.\n\nzonas &lt;-  readRDS(\"data/censo/zonas_urb_consolidadas.rds\")\n# unique(zonas$NOM_PROVIN)\nprovincia  &lt;- \"SAN ANTONIO\"\n\nbase_provincial &lt;-  zonas %&gt;% filter(NOM_PROVIN == provincia)\ncomunas &lt;- unique(base_provincial$NOM_COMUNA)\ncomunas\n\n[1] \"ALGARROBO\"     \"EL QUISCO\"     \"CARTAGENA\"     \"EL TABO\"      \n[5] \"SAN ANTONIO\"   \"SANTO DOMINGO\""
  },
  {
    "objectID": "iter_graph.html#interación",
    "href": "iter_graph.html#interación",
    "title": "Appendix E — Gráficos Interativos",
    "section": "E.3 Interación",
    "text": "E.3 Interación\nEn esta etapa se creará un script donde se genere un flujo que permita iterar por cada zona urbana de las comunas de la provincia de San Antonio. Primero se define una ruta de salida de los mapas donde se iràn almacenando. Posteriormente se crea una estructura de iteración mediante ciclo for (Section 5.2.1), donde al iterar por cada comna primero filtra la base de datos, luego genera el gráfico y finalmente guarda el mapa con nombre independiente.\n\nruta_salida &lt;- \"data/graficos/\"\n\n\nfor(comuna in comunas){\n  print(paste0(\"Operando la comuna: \", comuna))\n  #Fitrar base\n  base_comunal &lt;- base_provincial %&gt;% \n    filter(NOM_COMUNA == comuna)\n  # generar gráfico\n  grafico_com &lt;- ggplot() +\n    geom_sf(data = base_comunal, aes(fill = DENS_HAB), alpha= 0.8)+\n    scale_fill_viridis_c()+\n    ggtitle(paste0(\"DENSIDAD HABITANTES \", comuna)) +\n    theme_bw() +\n    theme(panel.grid.major = element_line(colour = \"gray80\"),\n          panel.grid.minor = element_line(colour = \"gray80\"))\n  #guardar imagenes\n  nombre_plot &lt;- \"Densidad_habitantes\"\n  nombre_imagen &lt;- paste0(ruta_salida, gsub(\" \", \"_\", comuna) ,\".jpg\")\n  ggplot2::ggsave(filename = nombre_imagen, plot = grafico_com, height = 7, width = 9)\n}"
  },
  {
    "objectID": "iter_graph.html#visualización-de-resultados",
    "href": "iter_graph.html#visualización-de-resultados",
    "title": "Appendix E — Gráficos Interativos",
    "section": "E.4 Visualización de resultados",
    "text": "E.4 Visualización de resultados\n\n\n\n\n\n\n\nDensidad Algarrobo\n\n\n\n\n\n\n\nDensidad Cartagena\n\n\n\n\n\n\n\n\n\nDensidad El Quisco\n\n\n\n\n\n\n\nDensidad El Tabo\n\n\n\n\n\n\n\n\n\nDensidad San Antonio\n\n\n\n\n\n\n\nDensidad Santo Domingo\n\n\n\n\nFigure E.1: Mapas generados de forma iterativa"
  },
  {
    "objectID": "first_report.html#descripción",
    "href": "first_report.html#descripción",
    "title": "8  Mi Primer Reporte",
    "section": "8.1 Descripción",
    "text": "8.1 Descripción\nEn este capítulo nos centraremos principalmente en escribir un reporte sobre un tema a elección utilizando una base de datos propia, o las dispuestas en presente curso o bien alguna fuente de datos abierta como las dispuestas en la siguiente lista:\nEjemplo de Fuente de datos abiertas.\n\nhttps://datos.gob.cl\nhttps://www.ide.cl\nhttps://datausa.io\nhttps://observatorio.ciren.cl/\nhttps://www.datawheel.us\nhttps://es.wikipedia.org/wiki/Wikipedia_en_español\n\nEl reporte en cuestión no importa demasiado el tema lo importante es que se utilice los diferentes contenidos en los que se encuentran en el presente libro digital:\n\nEncabezado YAML (Section 7.5)\nOrden basados en títulos (Section 7.6.1)\nResumen de Bases (Section 6.4, Section C.5)\nTablas (Appendix D)\nGráficos y/o Mapas (Section 6.5.2, Appendix B)\nImágenes (Section 7.6.3)\nLinks (Section 7.6.4)\n\n\n\n\n\n\n\nTip\n\n\n\nEl presente reporte es en esencia lo que requiere para la tarea 2."
  },
  {
    "objectID": "tidyverse_R.html#sec-genRes",
    "href": "tidyverse_R.html#sec-genRes",
    "title": "6  Tidyverse en R",
    "section": "6.4 Resúmenes Estadísticos con dplyr",
    "text": "6.4 Resúmenes Estadísticos con dplyr\n\n\n\nContabilizar cuantos metros cuadrados de oficina por cada comuna.\n\ntbl_resumen &lt;-  tbl_sii %&gt;%\n  group_by(n_com) %&gt;%\n  summarise(Cantidad_mz = n(),\n            Total_of = sum(oficinas)) %&gt;%\n  arrange(desc(Total_of)) # Ordenar\n\ntbl_resumen\n\n# A tibble: 170 × 3\n   n_com           Cantidad_mz Total_of\n   &lt;chr&gt;                 &lt;int&gt;    &lt;dbl&gt;\n 1 SANTIAGO CENTRO         686  6105996\n 2 LAS CONDES             2310  4248336\n 3 PROVIDENCIA             885  3495426\n 4 HUECHURABA             1160  1006138\n 5 QUILICURA              2592   751874\n 6 VITACURA                950   743734\n 7 SANTIAGO SUR            623   669270\n 8 Ã‘UÃ‘OA                1337   637982\n 9 SANTIAGO OESTE          586   586724\n10 PUDAHUEL               2775   561868\n# ℹ 160 more rows\n\n\nActividad\n\nContabilizar cuantos metros cuadrados de Comercio hay por cada comuna rdenar de mayor a menor.\nCrear tabla con las 10 comunas que tienen mayor densisdad de Comercio\n\n\n\n\n\n\n\nDensidad de comercio\n\n\n\nSe puede entender como la división de la cantidad de metros cuadrados de comercio dividio por el total de metros cuadrados."
  },
  {
    "objectID": "times.html#sec-timesGra",
    "href": "times.html#sec-timesGra",
    "title": "Appendix C — Datos temporales",
    "section": "C.5 Actividades de Resumen y Gráficos",
    "text": "C.5 Actividades de Resumen y Gráficos\nActividad: \nContar la cantidad de tasaciones que se realizaron por día semana y genere un gráfico\n\n\n\n\n\nActividad: \nContar la cantidad de tasaciones que se realizaron por mes y genere un gráfico\n\n\n\n\n\nGráficos de Día Semana por Comuna\n\ntas_day &lt;- tasacion %&gt;% \n  group_by(DIA_SEM, Comuna) %&gt;% \n  summarise(Cantidad = n(), .groups = \"keep\")\n\nnombre_plot &lt;- \"Tasaciones por día\"\ngdc &lt;- ggplot() +\n  geom_bar(data = tas_day, aes(x = DIA_SEM, y = Cantidad, group = 1,\n                               fill=DIA_SEM),\n           stat = \"identity\", \n           alpha = 0.9, size = 0.5)+\n  scale_fill_viridis_d()+\n  ggtitle(lab =  nombre_plot )+\n  labs(fill = \"Día Semana\")+\n   facet_wrap(~Comuna, nrow = 3)+ # Genera el mismo gráfico por comuna\n  theme_bw()\ngdc\n\n\n\n\n\n\ncoord_flip()+\n\ntas_day &lt;- tasacion %&gt;% \n  group_by(DIA_SEM, Comuna) %&gt;% \n  summarise(Cantidad = n(), .groups = \"keep\")\n\nnombre_plot &lt;- \"Tasaciones por día por Comuna\"\ngdc_flip &lt;- ggplot() +\n  geom_bar(data = tas_day, aes(x = DIA_SEM, y = Cantidad, group = 1,\n                               fill=DIA_SEM),\n           stat = \"identity\", \n           alpha = 0.9, size = 0.5)+\n  scale_fill_viridis_d()+\n  ggtitle(lab =  nombre_plot )+\n  labs(fill = \"Día de la semana \\npor comuna\")+\n  facet_wrap(~Comuna, nrow = 3)+\n  coord_flip()+\n  theme_bw()\ngdc_flip"
  },
  {
    "objectID": "first_report.html#configuración-de-proyecto",
    "href": "first_report.html#configuración-de-proyecto",
    "title": "8  Mi Primer Reporte",
    "section": "8.2 Configuración de Proyecto",
    "text": "8.2 Configuración de Proyecto"
  },
  {
    "objectID": "first_report.html#configuración-de-proyecto-en-rstudio",
    "href": "first_report.html#configuración-de-proyecto-en-rstudio",
    "title": "8  Mi Primer Reporte",
    "section": "8.2 Configuración de Proyecto en RStudio",
    "text": "8.2 Configuración de Proyecto en RStudio\nCrear Estructura de Carpetas\n\n\n\n\n\nProyecto RStudio de nuestro reporte\n\n\n\n\n\nIndicar que va ser en una carpeta existente\n\n\n\n\n\nSeleccionar Carpeta"
  },
  {
    "objectID": "reporte.html#elementos-de-un-documento-rmarkdown-sec-yalm",
    "href": "reporte.html#elementos-de-un-documento-rmarkdown-sec-yalm",
    "title": "7  Rmarkdown",
    "section": "7.5 Elementos de un documento Rmarkdown {sec-YALM}",
    "text": "7.5 Elementos de un documento Rmarkdown {sec-YALM}\nAspetos generales del texto. Referencias Link\n\ntitle Texto entre comillas que servirá de título general al documento.\nsubtitle. Texto entre comillas que servirá de subtítulo para el título general del documento.\nauthor Texto entre comillas para indicar el nombre del o los autores.\ndate. Campo para indicar la fecha. En el texto, con la expresión today, se solicita que imprima la fecha actual según el calendario del sistema operativo.\nbibliography. Se indica el nombre del archivo que contiene los datos para construir el listado de referencia bibliográficas. Este archivo es de formato BibTex y se construye usando un gestor de referencias como Zotero.\npdf_document: indica el formato preestablecido para compilar el documento. En este caso, se trata de un PDF. Puede ser html_document o word_document. El usuario puede escoger la modalidad que desee al compilar usando las opciones del botón knit; si se compila sin escoger ninguna opción, se compilará según el formato indicado en este encabezado.\nfig_caption: indica si las figuras deben incorporar leyendas. latex_engine: permite definir el motor de LaTex utilizado para compilar los documentos.\nnumber_sections: si está definido como yes define que se numerarán los títulos y sutítulos a lo largo del documento, de manera automática y correlativa.\ntoc: es la abreviación de table of contents; si está definido como yes incorporará al inicio del documento una tabla de contenidos construida a partir de los tres primeros niveles de los títulos y subtítulos de sección utilizados."
  },
  {
    "objectID": "reporte.html#configuración-del-código",
    "href": "reporte.html#configuración-del-código",
    "title": "7  Rmarkdown",
    "section": "7.7 Configuración del Código",
    "text": "7.7 Configuración del Código\nTeniendo en cuenta que uno de los elementos con mayor importancia en los reportes es la capacidad de incorporar bloques de código y este esa renderizado, entonce también se debe conocer los aspectos de configuración de ellos.\nSe trata de bloques de código delimitados por la siguiente estructura: el inicio de un código está delimitado por tres apostrofes seguidos por un r entre corchetes curvos {r}, y su cierre por otros tres apostrofes. Eso delimita lo que se ejecutará como código de computación, diferenciándolo respecto al texto simple. A continuación se observa un ejemplo de esto:\n\nLos argumentos sirven para configurar el comportamiento del código al momento de compilar el documento.\nComo no siempre se buscará que en el reporte final se despliegue la sintaxis original, o los mensajes y/o advertencias que reporta R luego de ejecutar un comando, es posible configurar la ejecución de cada trozo de código agregando diferentes opciones.\nPor ejemplo, al abrir el siguiente código de nuestra sintaxis de Markdown con las siguientes opciones {r, echo = FALSE, results = 'asis', message= FALSE} les estamos indicando lo siguiente:\necho = FALSE significa que no se desplegará la sintaxis en el reporte, pero sí se ejecutará la operación y mostrarán los resultados.\nresults = 'asis' indica que el resultado se exportará directamente al nuevo archivo, sin que sea configurado por RMarkdown. Esto es útil con funciones que formatean de manera inmediata los resultados al formato deseado.\nmessage = FALSE indica que no se mostrarán los mensajes de información en el informe final.\nEn la siguiente tabla se indican algunos de los argumentos de mayor utilidad para configurar trozos de código en RMarkdown.\n\n\n\nArgumentos para configurar los chunks de código en RMarkdown\n\n\nArgumento\nValor_por_defecto\nDetalle\n\n\n\n\neval\nTRUE\nSi se configura como FALSE, R sólo mostrará, pero no correrá el código\n\n\ninclude\nTRUE\nSi se configura como FALSE, R no mostrará el código, pero correrá el comando y mostrará sus resultados.\n\n\nerror\nTRUE\nSi se configura como FALSE, R no mostrará los mensajes de errores que resulten de la ejecución del código.\n\n\nresults\n—\nSi se configura como hide, R no mostrará los resultados del código aunque lo ejecutará tras bambalinas. Si se configura como delay, R mostrará sólo el último resultado del trozo de código. Si se configura como asis R no configurará con markdown la estructura de los resultados, imprimiéndolos de manera directa en el reporte final. Esto resulta útil cuando usamos funciones específicas para presentar resultados en algún formato de reporte específico (Word, PDF, etc.)\n\n\nwarning\nTRUE\nSi se configura como FALSE R no mostrará los mensajes de advertencia que resulten de la ejecución del código.\n\n\nmessage\nTRUE\nSi se configura como FALSE R no mostrará ningún tipo de mensaje que resulten de la ejecución del código."
  },
  {
    "objectID": "reporte.html#otras-referencias",
    "href": "reporte.html#otras-referencias",
    "title": "7  Rmarkdown",
    "section": "7.8 Otras Referencias",
    "text": "7.8 Otras Referencias\n\nXie, Dervieux, Riedere, 2023. “R Markdown Cookbook”. https://bookdown.org/yihui/rmarkdown-cookbook/notebook.html\nBoccardo, Ruiz, 2019. “RStudio para Estadística Descriptiva en Ciencias Sociales”. https://bookdown.org/gboccardo/manual-ED-UCH/introduccion-al-uso-de-rmarkdown-para-la-compilacion-de-resultados-de-rstudio-en-diferentes-formatos.html\nMiller, Steven V. 2018. “A Pandoc Markdown Article Starter and Template”. https://github.com/svmiller/svm-r-markdown-templates.\nGrolemund, Garret. 2014. “Introduction to R Markdown”. https://rmarkdown.rstudio.com/articles_intro.html.\nWorkshop, Reproducible Research. 2016. ““Writing Publications with R. Writing Publications with R”. http://www.geo.uzh.ch/microsite/reproducible_research/post/rr-r-publication/.\nNavarro, Juan. 2014. “LaTeX Fácil: Guía Rápida de LaTeX”. http://nokyotsu.com/latex/guia.html."
  },
  {
    "objectID": "reporte.html#elementos-de-un-documento-rmarkdown-sec-yaml",
    "href": "reporte.html#elementos-de-un-documento-rmarkdown-sec-yaml",
    "title": "7  Rmarkdown",
    "section": "7.5 Elementos de un documento Rmarkdown {sec-YAML}",
    "text": "7.5 Elementos de un documento Rmarkdown {sec-YAML}\nAspetos generales del texto. Referencias Link\n\ntitle Texto entre comillas que servirá de título general al documento.\nsubtitle. Texto entre comillas que servirá de subtítulo para el título general del documento.\nauthor Texto entre comillas para indicar el nombre del o los autores.\ndate. Campo para indicar la fecha. En el texto, con la expresión today, se solicita que imprima la fecha actual según el calendario del sistema operativo.\nbibliography. Se indica el nombre del archivo que contiene los datos para construir el listado de referencia bibliográficas. Este archivo es de formato BibTex y se construye usando un gestor de referencias como Zotero.\npdf_document: indica el formato preestablecido para compilar el documento. En este caso, se trata de un PDF. Puede ser html_document o word_document. El usuario puede escoger la modalidad que desee al compilar usando las opciones del botón knit; si se compila sin escoger ninguna opción, se compilará según el formato indicado en este encabezado.\nfig_caption: indica si las figuras deben incorporar leyendas. latex_engine: permite definir el motor de LaTex utilizado para compilar los documentos.\nnumber_sections: si está definido como yes define que se numerarán los títulos y sutítulos a lo largo del documento, de manera automática y correlativa.\ntoc: es la abreviación de table of contents; si está definido como yes incorporará al inicio del documento una tabla de contenidos construida a partir de los tres primeros niveles de los títulos y subtítulos de sección utilizados."
  },
  {
    "objectID": "reporte.html#sec-YAML",
    "href": "reporte.html#sec-YAML",
    "title": "7  Rmarkdown",
    "section": "7.5 Elementos de un documento Rmarkdown",
    "text": "7.5 Elementos de un documento Rmarkdown\nAspectos generales del texto. Referencias Link\n\ntitle Texto entre comillas que servirá de título general al documento.\nsubtitle. Texto entre comillas que servirá de subtitulo para el título general del documento.\nauthor Texto entre comillas para indicar el nombre del o los autores.\ndate. Campo para indicar la fecha. En el texto, con la expresión today, se solicita que imprima la fecha actual según el calendario del sistema operativo.\nbibliography. Se indica el nombre del archivo que contiene los datos para construir el listado de referencia bibliográficas. Este archivo es de formato BibTex y se construye usando un gestor de referencias como Zotero.\npdf_document: indica el formato preestablecido para compilar el documento. En este caso, se trata de un PDF. Puede ser html_document o word_document. El usuario puede escoger la modalidad que desee al compilar usando las opciones del botón knit; si se compila sin escoger ninguna opción, se compilará según el formato indicado en este encabezado.\nfig_caption: indica si las figuras deben incorporar leyendas. latex_engine: permite definir el motor de LaTex utilizado para compilar los documentos.\nnumber_sections: si está definido como yes define que se numerarán los títulos y sutítulos a lo largo del documento, de manera automática y correlativa.\ntoc: es la abreviación de table of contents; si está definido como yes incorporará al inicio del documento una tabla de contenidos construida a partir de los tres primeros niveles de los títulos y subtítulos de sección utilizados."
  },
  {
    "objectID": "first_report.html#sec-ProyRStudio",
    "href": "first_report.html#sec-ProyRStudio",
    "title": "8  Mi Primer Reporte",
    "section": "8.2 Configuración de Proyecto en RStudio",
    "text": "8.2 Configuración de Proyecto en RStudio\nCrear Estructura de Carpetas\n\n\n\n\n\nProyecto RStudio de nuestro reporte\n\n\n\n\n\nIndicar que va ser en una carpeta existente\n\n\n\n\n\nSeleccionar Carpeta"
  },
  {
    "objectID": "tarea_2.html#enunciado-general",
    "href": "tarea_2.html#enunciado-general",
    "title": "Tarea 2",
    "section": "Enunciado General",
    "text": "Enunciado General\nIntegrantes: 1 (Individual).\nFecha de Entrega: 30 de Junio, 23:59 horas."
  },
  {
    "objectID": "tarea_2.html#parte-1-70",
    "href": "tarea_2.html#parte-1-70",
    "title": "Tarea 2",
    "section": "Parte 1 70%",
    "text": "Parte 1 70%\nEl reporte en cuestión no importa demasiado el tema lo importante es que se utilice los diferentes contenidos en los que se encuentran en el presente libro digital:\n\nEcabezado YAML (Section 7.5)\nOrden basados en títulos (Section 7.6.1)\nResumen de Bases (Section 6.4, Section C.5)\nTablas (Appendix D)\nGráficos y/o Mapas (Section 6.5.2, Appendix B)\nImágenes (Section 7.6.3)\nLinks (Section 7.6.4)"
  },
  {
    "objectID": "tarea_2.html#parte-2-30",
    "href": "tarea_2.html#parte-2-30",
    "title": "Tarea 2",
    "section": "Parte 2 30%",
    "text": "Parte 2 30%\nEl reporte debe estar contenido en un proyecto de RStudio, y este proyecto es que se entrega como tarea 2, debe contener en su interior toras las subcarpetas que se utilizaron como por ejemplo data, images R, etc. En este punto se evaluará el orden enlos códigos y estructura del proyecto, como referencia para crear el proyecto seguir las instrucción de Section 8.2."
  },
  {
    "objectID": "tarea_2.html#parte-1-ponderación-70",
    "href": "tarea_2.html#parte-1-ponderación-70",
    "title": "Tarea 2",
    "section": "Parte 1 (Ponderación 70%)",
    "text": "Parte 1 (Ponderación 70%)\nEl reporte en cuestión no importa demasiado el tema lo importante es que se utilice los diferentes contenidos en los que se encuentran en el presente libro digital:\n\nEncabezado YAML (Section 7.5)\nOrden basados en títulos (Section 7.6.1)\nResumen de Bases (Section 6.4, Section C.5)\nTablas (Appendix D)\nGráficos y/o Mapas (Section 6.5.2, Appendix B)\nImágenes (Section 7.6.3)\nLinks (Section 7.6.4)"
  },
  {
    "objectID": "tarea_2.html#parte-2-ponderación-30",
    "href": "tarea_2.html#parte-2-ponderación-30",
    "title": "Tarea 2",
    "section": "Parte 2 (Ponderación 30%)",
    "text": "Parte 2 (Ponderación 30%)\nEl reporte debe estar contenido en un proyecto de RStudio, y este proyecto es que se entrega como tarea 2, debe contener en su interior todas las subcarpetas que se utilizaron como por ejemplo data, images R, etc. En este punto se evaluará el orden en los códigos y estructura del proyecto, como referencia para crear el proyecto seguir las instrucción de Section 8.2."
  }
]